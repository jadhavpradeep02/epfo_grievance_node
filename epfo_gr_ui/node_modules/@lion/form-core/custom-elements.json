{
  "schemaVersion": "0.1.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "./define.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./define.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./index.d.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "FocusMixin",
          "declaration": {
            "name": "FocusMixin",
            "module": "\"./src/FocusMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormatMixin",
          "declaration": {
            "name": "FormatMixin",
            "module": "\"./src/FormatMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormControlMixin",
          "declaration": {
            "name": "FormControlMixin",
            "module": "\"./src/FormControlMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "InteractionStateMixin",
          "declaration": {
            "name": "InteractionStateMixin",
            "module": "\"./src/InteractionStateMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "LionField",
          "declaration": {
            "name": "LionField",
            "module": "\"./src/LionField.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormRegisteringMixin",
          "declaration": {
            "name": "FormRegisteringMixin",
            "module": "\"./src/registration/FormRegisteringMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarMixin",
          "declaration": {
            "name": "FormRegistrarMixin",
            "module": "\"./src/registration/FormRegistrarMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarPortalMixin",
          "declaration": {
            "name": "FormRegistrarPortalMixin",
            "module": "\"./src/registration/FormRegistrarPortalMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "NativeTextFieldMixin",
          "declaration": {
            "name": "NativeTextFieldMixin",
            "module": "\"./src/NativeTextFieldMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormControlsCollection",
          "declaration": {
            "name": "FormControlsCollection",
            "module": "\"./src/registration/FormControlsCollection.js\""
          }
        },
        {
          "kind": "js",
          "name": "ValidateMixin",
          "declaration": {
            "name": "ValidateMixin",
            "module": "\"./src/validate/ValidateMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "Unparseable",
          "declaration": {
            "name": "Unparseable",
            "module": "\"./src/validate/Unparseable.js\""
          }
        },
        {
          "kind": "js",
          "name": "Validator",
          "declaration": {
            "name": "Validator",
            "module": "\"./src/validate/Validator.js\""
          }
        },
        {
          "kind": "js",
          "name": "ResultValidator",
          "declaration": {
            "name": "ResultValidator",
            "module": "\"./src/validate/ResultValidator.js\""
          }
        },
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "\"./src/validate/validators/Required.js\""
          }
        },
        {
          "kind": "js",
          "name": "DefaultSuccess",
          "declaration": {
            "name": "DefaultSuccess",
            "module": "\"./src/validate/resultValidators/DefaultSuccess.js\""
          }
        },
        {
          "kind": "js",
          "name": "LionValidationFeedback",
          "declaration": {
            "name": "LionValidationFeedback",
            "module": "\"./src/validate/LionValidationFeedback.js\""
          }
        },
        {
          "kind": "js",
          "name": "ChoiceGroupMixin",
          "declaration": {
            "name": "ChoiceGroupMixin",
            "module": "\"./src/choice-group/ChoiceGroupMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "ChoiceInputMixin",
          "declaration": {
            "name": "ChoiceInputMixin",
            "module": "\"./src/choice-group/ChoiceInputMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "FormGroupMixin",
          "declaration": {
            "name": "FormGroupMixin",
            "module": "\"./src/form-group/FormGroupMixin.js\""
          }
        },
        {
          "kind": "js",
          "name": "IsString",
          "declaration": {
            "name": "IsString",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "EqualsLength",
          "declaration": {
            "name": "EqualsLength",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MinLength",
          "declaration": {
            "name": "MinLength",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MaxLength",
          "declaration": {
            "name": "MaxLength",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MinMaxLength",
          "declaration": {
            "name": "MinMaxLength",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "IsEmail",
          "declaration": {
            "name": "IsEmail",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "Pattern",
          "declaration": {
            "name": "Pattern",
            "module": "\"./src/validate/validators/StringValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "IsNumber",
          "declaration": {
            "name": "IsNumber",
            "module": "\"./src/validate/validators/NumberValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MinNumber",
          "declaration": {
            "name": "MinNumber",
            "module": "\"./src/validate/validators/NumberValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MaxNumber",
          "declaration": {
            "name": "MaxNumber",
            "module": "\"./src/validate/validators/NumberValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MinMaxNumber",
          "declaration": {
            "name": "MinMaxNumber",
            "module": "\"./src/validate/validators/NumberValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "IsDate",
          "declaration": {
            "name": "IsDate",
            "module": "\"./src/validate/validators/DateValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MinDate",
          "declaration": {
            "name": "MinDate",
            "module": "\"./src/validate/validators/DateValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MaxDate",
          "declaration": {
            "name": "MaxDate",
            "module": "\"./src/validate/validators/DateValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "MinMaxDate",
          "declaration": {
            "name": "MinMaxDate",
            "module": "\"./src/validate/validators/DateValidators.js\""
          }
        },
        {
          "kind": "js",
          "name": "IsDateDisabled",
          "declaration": {
            "name": "IsDateDisabled",
            "module": "\"./src/validate/validators/DateValidators.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "FocusMixin",
          "declaration": {
            "name": "FocusMixin",
            "module": "./src/FocusMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "FormatMixin",
          "declaration": {
            "name": "FormatMixin",
            "module": "./src/FormatMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "FormControlMixin",
          "declaration": {
            "name": "FormControlMixin",
            "module": "./src/FormControlMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionStateMixin",
          "declaration": {
            "name": "InteractionStateMixin",
            "module": "./src/InteractionStateMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "LionField",
          "declaration": {
            "name": "LionField",
            "module": "./src/LionField.js"
          }
        },
        {
          "kind": "js",
          "name": "FormRegisteringMixin",
          "declaration": {
            "name": "FormRegisteringMixin",
            "module": "./src/registration/FormRegisteringMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarMixin",
          "declaration": {
            "name": "FormRegistrarMixin",
            "module": "./src/registration/FormRegistrarMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarPortalMixin",
          "declaration": {
            "name": "FormRegistrarPortalMixin",
            "module": "./src/registration/FormRegistrarPortalMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "NativeTextFieldMixin",
          "declaration": {
            "name": "NativeTextFieldMixin",
            "module": "./src/NativeTextFieldMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "FormControlsCollection",
          "declaration": {
            "name": "FormControlsCollection",
            "module": "./src/registration/FormControlsCollection.js"
          }
        },
        {
          "kind": "js",
          "name": "ValidateMixin",
          "declaration": {
            "name": "ValidateMixin",
            "module": "./src/validate/ValidateMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "Unparseable",
          "declaration": {
            "name": "Unparseable",
            "module": "./src/validate/Unparseable.js"
          }
        },
        {
          "kind": "js",
          "name": "Validator",
          "declaration": {
            "name": "Validator",
            "module": "./src/validate/Validator.js"
          }
        },
        {
          "kind": "js",
          "name": "ResultValidator",
          "declaration": {
            "name": "ResultValidator",
            "module": "./src/validate/ResultValidator.js"
          }
        },
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "./src/validate/validators/Required.js"
          }
        },
        {
          "kind": "js",
          "name": "IsString",
          "declaration": {
            "name": "IsString",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "EqualsLength",
          "declaration": {
            "name": "EqualsLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinLength",
          "declaration": {
            "name": "MinLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MaxLength",
          "declaration": {
            "name": "MaxLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxLength",
          "declaration": {
            "name": "MinMaxLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "IsEmail",
          "declaration": {
            "name": "IsEmail",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "Pattern",
          "declaration": {
            "name": "Pattern",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "IsNumber",
          "declaration": {
            "name": "IsNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinNumber",
          "declaration": {
            "name": "MinNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MaxNumber",
          "declaration": {
            "name": "MaxNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxNumber",
          "declaration": {
            "name": "MinMaxNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "IsDate",
          "declaration": {
            "name": "IsDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinDate",
          "declaration": {
            "name": "MinDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MaxDate",
          "declaration": {
            "name": "MaxDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxDate",
          "declaration": {
            "name": "MinMaxDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "IsDateDisabled",
          "declaration": {
            "name": "IsDateDisabled",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "DefaultSuccess",
          "declaration": {
            "name": "DefaultSuccess",
            "module": "./src/validate/resultValidators/DefaultSuccess.js"
          }
        },
        {
          "kind": "js",
          "name": "LionValidationFeedback",
          "declaration": {
            "name": "LionValidationFeedback",
            "module": "./src/validate/LionValidationFeedback.js"
          }
        },
        {
          "kind": "js",
          "name": "ChoiceGroupMixin",
          "declaration": {
            "name": "ChoiceGroupMixin",
            "module": "./src/choice-group/ChoiceGroupMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ChoiceInputMixin",
          "declaration": {
            "name": "ChoiceInputMixin",
            "module": "./src/choice-group/ChoiceInputMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "FormGroupMixin",
          "declaration": {
            "name": "FormGroupMixin",
            "module": "./src/form-group/FormGroupMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./lion-field.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./lion-field.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lion-field",
          "declaration": {
            "name": "LionField",
            "module": "./src/LionField.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./lion-validation-feedback.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./lion-validation-feedback.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lion-validation-feedback",
          "declaration": {
            "name": "LionValidationFeedback",
            "module": "./src/validate/LionValidationFeedback.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/FocusMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FocusMixin",
          "description": "For browsers that not support the [spec](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible),\nbe sure to load the polyfill into your application https://github.com/WICG/focus-visible\n(or go for progressive enhancement).",
          "type": {
            "text": "typeof import(\"../types/FocusMixinTypes\").FocusImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FocusMixin",
          "declaration": {
            "name": "FocusMixin",
            "module": "./src/FocusMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/FocusMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "FocusMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "events": [
            {
              "name": "focus",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "blur",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "focusin",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "focusout",
              "type": {
                "text": "Event"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "privacy": "public",
              "description": "Calls `focus()` on focusable element within"
            },
            {
              "kind": "method",
              "name": "blur",
              "privacy": "public",
              "description": "Calls `blur()` on focusable element within"
            },
            {
              "kind": "field",
              "name": "_focusableNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "__onFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__onBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__registerEventsForFocusMixin",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__teardownEventsForFocusMixin",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FocusMixin",
          "declaration": {
            "name": "FocusMixin",
            "module": "./src/FocusMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/FormControlMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormControlMixin",
          "type": {
            "text": "typeof import(\"../types/FormControlMixinTypes.js\").FormControlImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControlMixin",
          "declaration": {
            "name": "FormControlMixin",
            "module": "./src/FormControlMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/FormControlMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "FormControlMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "events": [
            {
              "name": "form-element-name-changed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "model-value-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "mixins": [
            {
              "name": "FormRegisteringMixin",
              "module": "/src/registration/FormRegisteringMixin.js"
            },
            {
              "name": "DisabledMixin",
              "package": "@lion/core"
            },
            {
              "name": "SlotMixin",
              "package": "@lion/core"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The label text for the input node.\nWhen no value is defined, textContent of [slot=label] will be used",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "helpText",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The helpt text for the input node.\nWhen no value is defined, textContent of [slot=help-text] will be used",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "fieldName",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_labelNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_helpTextNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_feedbackNode",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomClasses",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomA11y",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomA11yForAdditionalSlots",
              "privacy": "protected",
              "description": "Enhances additional slots(prefix, suffix, before, after) defined by developer.\n\nWhen boolean attribute data-label or data-description is found,\nthe slot element will be connected to the input via aria-labelledby or aria-describedby",
              "parameters": [
                {
                  "name": "additionalSlots",
                  "type": {
                    "text": "string[]"
                  },
                  "default": "['prefix', 'suffix', 'before', 'after']"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__reflectAriaAttr",
              "privacy": "public",
              "description": "Will handle help text, validation feedback and character counter,\nprefix/suffix/before/after (if they contain data-description flag attr).\nAlso, contents of id references that will be put in the <lion-field>._ariaDescribedby property\nfrom an external context, will be read by a screen reader.",
              "parameters": [
                {
                  "name": "attrName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "nodes",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "reorder",
                  "type": {
                    "text": "boolean|undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "description": "Default Render Result:\n<div class=\"form-field__group-one\">\n<div class=\"form-field__label\">\n<slot name=\"label\"></slot>\n</div>\n<small class=\"form-field__help-text\">\n<slot name=\"help-text\"></slot>\n</small>\n</div>\n<div class=\"form-field__group-two\">\n<div class=\"input-group\">\n<div class=\"input-group__before\">\n<slot name=\"before\"></slot>\n</div>\n<div class=\"input-group__container\">\n<div class=\"input-group__prefix\">\n<slot name=\"prefix\"></slot>\n</div>\n<div class=\"input-group__input\">\n<slot name=\"input\"></slot>\n</div>\n<div class=\"input-group__suffix\">\n<slot name=\"suffix\"></slot>\n</div>\n</div>\n<div class=\"input-group__after\">\n<slot name=\"after\"></slot>\n</div>\n</div>\n<div class=\"form-field__feedback\">\n<slot name=\"feedback\"></slot>\n</div>\n</div>"
            },
            {
              "kind": "method",
              "name": "_groupOneTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_groupTwoTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_labelTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_helpTextTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupBeforeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupPrefixTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | nothing"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupInputTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupSuffixTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | nothing"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupAfterTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_feedbackTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected",
              "description": "Used for Required validation and computation of interaction states",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "any"
                  },
                  "default": "(this).modelValue"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAriaDescriptionElements",
              "privacy": "protected",
              "description": "This function exposes descripion elements that a FormGroup should expose to its\nchildren. See FormGroupMixin.__getAllDescriptionElementsInParentChain()",
              "return": {
                "type": {
                  "text": "Array.<HTMLElement>"
                }
              }
            },
            {
              "kind": "method",
              "name": "addToAriaLabelledBy",
              "privacy": "public",
              "description": "Allows to add extra element references to aria-labelledby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{idPrefix?:string; reorder?: boolean}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeFromAriaLabelledBy",
              "privacy": "public",
              "description": "Allows to remove element references from aria-labelledby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addToAriaDescribedBy",
              "privacy": "public",
              "description": "Allows to add element references to aria-describedby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{idPrefix?:string; reorder?: boolean}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeFromAriaDescribedBy",
              "privacy": "public",
              "description": "Allows to remove element references from aria-describedby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__getDirectSlotChild",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "slotName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchInitialModelValueChangedEvent",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_onBeforeRepropagateChildrenValues",
              "privacy": "protected",
              "description": "Hook for Subclassers to add logic before repropagation",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__repropagateChildrenValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_repropagationCondition",
              "privacy": "protected",
              "description": "Based on provided target, this condition determines whether received model-value-changed\nevent should be repropagated",
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onLabelClick",
              "privacy": "protected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControlMixin",
          "declaration": {
            "name": "FormControlMixin",
            "module": "./src/FormControlMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/FormatMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormatMixin",
          "type": {
            "text": "typeof import(\"../types/FormatMixinTypes.js\").FormatImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormatMixin",
          "declaration": {
            "name": "FormatMixin",
            "module": "./src/FormatMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/FormatMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "FormatMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "events": [
            {
              "name": "model-value-changed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "user-input-changed",
              "type": {
                "text": "Event"
              },
              "description": "meant for usage by Subclassers only"
            }
          ],
          "mixins": [
            {
              "name": "ValidateMixin",
              "module": "/src/validate/ValidateMixin.js"
            },
            {
              "name": "FormControlMixin",
              "module": "/src/FormControlMixin.js"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "requestUpdate",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldVal",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "preprocessor",
              "privacy": "public",
              "description": "Preprocesses the viewValue before it's parsed to a modelValue. Can be used to filter\ninvalid input amongst others.",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "the raw value from the <input> after keyUp/Down event"
                }
              ]
            },
            {
              "kind": "method",
              "name": "parser",
              "privacy": "public",
              "description": "Converts viewValue to modelValue\nFor instance, a localized date to a Date Object",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "viewValue: the formatted value inside <input>"
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "FormatOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formatter",
              "privacy": "public",
              "description": "Converts modelValue to formattedValue (formattedValue will be synced with\n`._inputNode.value`)\nFor instance, a Date object to a localized date.",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "*"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "FormatOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "serializer",
              "privacy": "public",
              "description": "Converts `.modelValue` to `.serializedValue`\nFor instance, a Date object to an iso formatted date string",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "?"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                }
              ]
            },
            {
              "kind": "method",
              "name": "deserializer",
              "privacy": "public",
              "description": "Converts `.serializedValue` to `.modelValue`\nFor instance, an iso formatted date string to a Date object",
              "return": {
                "type": {
                  "text": "?"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "?"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_calculateValues",
              "privacy": "protected",
              "description": "Responsible for storing all representations(modelValue, serializedValue, formattedValue\nand value) of the input value. Prevents infinite loops, so all value observers can be\ntreated like they will only be called once, without indirectly calling other observers.\n(in fact, some are called twice, but the __preventRecursiveTrigger lock prevents the\nsecond call from having effect).",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "{source:'model'|'serialized'|'formatted'|null}"
                  },
                  "description": "the type of value that triggered this method. It should not be\nset again, so that its observer won't be triggered. Can be:\n'model'|'formatted'|'serialized'."
                }
              ]
            },
            {
              "kind": "method",
              "name": "_callParser",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "?"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string|undefined"
                  },
                  "default": "this.formattedValue"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_callFormatter",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onModelValueChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "{ modelValue: unknown; }[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchModelValueChangedEvent",
              "privacy": "protected",
              "description": "This is wrapped in a distinct method, so that parents can control when the changed event\nis fired. For objects, a deep comparison might be needed.",
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "{ modelValue: unknown; }[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncValueUpwards",
              "privacy": "protected",
              "description": "Synchronization from `._inputNode.value` to `LionField` (flow [2])\nDownwards syncing should only happen for `LionField`.value changes from 'above'.\nThis triggers _onModelValueChanged and connects user input\nto the parsing/formatting/serializing loop."
            },
            {
              "kind": "method",
              "name": "_reflectBackFormattedValueToUser",
              "privacy": "protected",
              "description": "Synchronization from `LionField.value` to `._inputNode.value`\n- flow [1] will always be reflected back\n- flow [2] will not be reflected back when this flow was triggered via\n`@user-input-changed` (this will happen later, when `formatOn` condition is met)"
            },
            {
              "kind": "method",
              "name": "_reflectBackOn",
              "privacy": "protected",
              "description": "Every time .formattedValue is attempted to sync to the view value (on change/blur and on\nmodelValue change), this condition is checked. When enhancing it, it's recommended to\ncall `super._reflectBackOn()`",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_proxyInputEvent",
              "privacy": "protected",
              "description": "This can be called whenever the view value should be updated. Dependent on component type\n(\"input\" for <input> or \"change\" for <select>(mainly for IE)) a different event should be\nused  as source for the \"user-input-changed\" event (which can be seen as an abstraction\nlayer on top of other events (input, change, whatever))"
            },
            {
              "kind": "method",
              "name": "_onUserInputChanged",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "__onCompositionEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__onPaste",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormatMixin",
          "declaration": {
            "name": "FormatMixin",
            "module": "./src/FormatMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/InteractionStateMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InteractionStateMixin",
          "type": {
            "text": "typeof import(\"../types/InteractionStateMixinTypes.js\").InteractionStateImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InteractionStateMixin",
          "declaration": {
            "name": "InteractionStateMixin",
            "module": "./src/InteractionStateMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/InteractionStateMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "InteractionStateMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "events": [
            {
              "name": "touched-changed",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "dirty-changed",
              "type": {
                "text": "Event"
              }
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "module": "/src/FormControlMixin.js"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "requestUpdate",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "PropertyKey"
                  }
                },
                {
                  "name": "oldVal",
                  "type": {
                    "text": "*"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initInteractionState",
              "privacy": "public",
              "description": "Evaluations performed on connectedCallback.\nThis method is public, so it can be called at a later moment (when we need to wait for\nregistering children for instance) as well.\nSince this method will be called twice in last mentioned scenario, it must stay idempotent."
            },
            {
              "kind": "method",
              "name": "_iStateOnLeave",
              "privacy": "protected",
              "description": "Sets touched value to true and reevaluates prefilled state.\nWhen false, on next interaction, user will start with a clean state."
            },
            {
              "kind": "method",
              "name": "_iStateOnValueChange",
              "privacy": "protected",
              "description": "Sets dirty value and validates when already touched or invalid"
            },
            {
              "kind": "method",
              "name": "resetInteractionState",
              "privacy": "public",
              "description": "Resets touched and dirty, and recomputes prefilled"
            },
            {
              "kind": "method",
              "name": "_onTouchedChanged",
              "privacy": "protected",
              "description": "Dispatches event on touched state change"
            },
            {
              "kind": "method",
              "name": "_onDirtyChanged",
              "privacy": "protected",
              "description": "Dispatches event on touched state change"
            },
            {
              "kind": "method",
              "name": "_showFeedbackConditionFor",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "meta",
                  "type": {
                    "text": "InteractionStates"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_feedbackConditionMeta",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InteractionStateMixin",
          "declaration": {
            "name": "InteractionStateMixin",
            "module": "./src/InteractionStateMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/LionField.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "LionField",
          "superclass": {
            "name": "LionField_base",
            "module": "./src/LionField.d.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "_initialModelValue",
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "protected",
              "description": "Dispatches custom bubble event",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public",
              "description": "Resets modelValue to initial value.\nInteraction states are cleared",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "public",
              "description": "Clears modelValue.\nInteraction states are not cleared (use resetInteractionState for this)",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionField",
          "declaration": {
            "name": "LionField",
            "module": "./src/LionField.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/LionField.js",
      "declarations": [
        {
          "kind": "class",
          "name": "LionField",
          "events": [
            {
              "name": "user-input-changed",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "form-element-name-changed",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "name": "model-value-changed",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "name": "touched-changed",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "name": "dirty-changed",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "name": "focus",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "name": "blur",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "name": "focusin",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "name": "focusout",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "module": "/src/FormControlMixin.js"
            },
            {
              "name": "InteractionStateMixin",
              "module": "/src/InteractionStateMixin.js"
            },
            {
              "name": "FocusMixin",
              "module": "/src/FocusMixin.js"
            },
            {
              "name": "FormatMixin",
              "module": "/src/FormatMixin.js"
            },
            {
              "name": "ValidateMixin",
              "module": "/src/validate/ValidateMixin.js"
            },
            {
              "name": "SlotMixin",
              "package": "@lion/core"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "@lion/core"
          },
          "members": [
            {
              "kind": "method",
              "name": "resetInteractionState",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public",
              "description": "Resets modelValue to initial value.\nInteraction states are cleared"
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "public",
              "description": "Clears modelValue.\nInteraction states are not cleared (use resetInteractionState for this)"
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "protected",
              "description": "Dispatches custom bubble event"
            },
            {
              "kind": "field",
              "name": "_feedbackConditionMeta",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_focusableNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The label text for the input node.\nWhen no value is defined, textContent of [slot=label] will be used",
              "default": "''",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "helpText",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "The helpt text for the input node.\nWhen no value is defined, textContent of [slot=help-text] will be used",
              "default": "''",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "fieldName",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_labelNode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_helpTextNode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_feedbackNode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues "
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomClasses",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomA11y",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomA11yForAdditionalSlots",
              "privacy": "protected",
              "description": "Enhances additional slots(prefix, suffix, before, after) defined by developer.\n\nWhen boolean attribute data-label or data-description is found,\nthe slot element will be connected to the input via aria-labelledby or aria-describedby",
              "parameters": [
                {
                  "name": "additionalSlots",
                  "type": {
                    "text": "string[]"
                  },
                  "default": "['prefix', 'suffix', 'before', 'after']"
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__reflectAriaAttr",
              "privacy": "public",
              "description": "Will handle help text, validation feedback and character counter,\nprefix/suffix/before/after (if they contain data-description flag attr).\nAlso, contents of id references that will be put in the <lion-field>._ariaDescribedby property\nfrom an external context, will be read by a screen reader.",
              "parameters": [
                {
                  "name": "attrName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "nodes",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "reorder",
                  "type": {
                    "text": "boolean|undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "description": "Default Render Result:\n<div class=\"form-field__group-one\">\n<div class=\"form-field__label\">\n<slot name=\"label\"></slot>\n</div>\n<small class=\"form-field__help-text\">\n<slot name=\"help-text\"></slot>\n</small>\n</div>\n<div class=\"form-field__group-two\">\n<div class=\"input-group\">\n<div class=\"input-group__before\">\n<slot name=\"before\"></slot>\n</div>\n<div class=\"input-group__container\">\n<div class=\"input-group__prefix\">\n<slot name=\"prefix\"></slot>\n</div>\n<div class=\"input-group__input\">\n<slot name=\"input\"></slot>\n</div>\n<div class=\"input-group__suffix\">\n<slot name=\"suffix\"></slot>\n</div>\n</div>\n<div class=\"input-group__after\">\n<slot name=\"after\"></slot>\n</div>\n</div>\n<div class=\"form-field__feedback\">\n<slot name=\"feedback\"></slot>\n</div>\n</div>",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_groupOneTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_groupTwoTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_labelTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_helpTextTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupBeforeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupPrefixTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | nothing"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupInputTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupSuffixTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | nothing"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupAfterTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_feedbackTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected",
              "description": "Used for Required validation and computation of interaction states",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "any"
                  },
                  "default": "(this).modelValue"
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_getAriaDescriptionElements",
              "privacy": "protected",
              "description": "This function exposes descripion elements that a FormGroup should expose to its\nchildren. See FormGroupMixin.__getAllDescriptionElementsInParentChain()",
              "return": {
                "type": {
                  "text": "Array.<HTMLElement>"
                }
              },
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "addToAriaLabelledBy",
              "privacy": "public",
              "description": "Allows to add extra element references to aria-labelledby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{idPrefix?:string; reorder?: boolean}"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "removeFromAriaLabelledBy",
              "privacy": "public",
              "description": "Allows to remove element references from aria-labelledby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "addToAriaDescribedBy",
              "privacy": "public",
              "description": "Allows to add element references to aria-describedby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{idPrefix?:string; reorder?: boolean}"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "removeFromAriaDescribedBy",
              "privacy": "public",
              "description": "Allows to remove element references from aria-describedby attribute.",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__getDirectSlotChild",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "slotName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_dispatchInitialModelValueChangedEvent",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_onBeforeRepropagateChildrenValues",
              "privacy": "protected",
              "description": "Hook for Subclassers to add logic before repropagation",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__repropagateChildrenValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_repropagationCondition",
              "privacy": "protected",
              "description": "Based on provided target, this condition determines whether received model-value-changed\nevent should be repropagated",
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_onLabelClick",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormControlMixin",
                "module": "./src/FormControlMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "requestUpdate",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "PropertyKey"
                  }
                },
                {
                  "name": "oldVal",
                  "type": {
                    "text": "*"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "initInteractionState",
              "privacy": "public",
              "description": "Evaluations performed on connectedCallback.\nThis method is public, so it can be called at a later moment (when we need to wait for\nregistering children for instance) as well.\nSince this method will be called twice in last mentioned scenario, it must stay idempotent.",
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_iStateOnLeave",
              "privacy": "protected",
              "description": "Sets touched value to true and reevaluates prefilled state.\nWhen false, on next interaction, user will start with a clean state.",
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_iStateOnValueChange",
              "privacy": "protected",
              "description": "Sets dirty value and validates when already touched or invalid",
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_onTouchedChanged",
              "privacy": "protected",
              "description": "Dispatches event on touched state change",
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_onDirtyChanged",
              "privacy": "protected",
              "description": "Dispatches event on touched state change",
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_showFeedbackConditionFor",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "meta",
                  "type": {
                    "text": "InteractionStates"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "InteractionStateMixin",
                "module": "./src/InteractionStateMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "privacy": "public",
              "description": "Calls `focus()` on focusable element within",
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "blur",
              "privacy": "public",
              "description": "Calls `blur()` on focusable element within",
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__onFocus",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__onBlur",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__registerEventsForFocusMixin",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__teardownEventsForFocusMixin",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FocusMixin",
                "module": "./src/FocusMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "preprocessor",
              "privacy": "public",
              "description": "Preprocesses the viewValue before it's parsed to a modelValue. Can be used to filter\ninvalid input amongst others.",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "the raw value from the <input> after keyUp/Down event"
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "parser",
              "privacy": "public",
              "description": "Converts viewValue to modelValue\nFor instance, a localized date to a Date Object",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "viewValue: the formatted value inside <input>"
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "FormatOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "formatter",
              "privacy": "public",
              "description": "Converts modelValue to formattedValue (formattedValue will be synced with\n`._inputNode.value`)\nFor instance, a Date object to a localized date.",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "*"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "FormatOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "serializer",
              "privacy": "public",
              "description": "Converts `.modelValue` to `.serializedValue`\nFor instance, a Date object to an iso formatted date string",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "?"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "deserializer",
              "privacy": "public",
              "description": "Converts `.serializedValue` to `.modelValue`\nFor instance, an iso formatted date string to a Date object",
              "return": {
                "type": {
                  "text": "?"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "?"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_calculateValues",
              "privacy": "protected",
              "description": "Responsible for storing all representations(modelValue, serializedValue, formattedValue\nand value) of the input value. Prevents infinite loops, so all value observers can be\ntreated like they will only be called once, without indirectly calling other observers.\n(in fact, some are called twice, but the __preventRecursiveTrigger lock prevents the\nsecond call from having effect).",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "{source:'model'|'serialized'|'formatted'|null}"
                  },
                  "description": "the type of value that triggered this method. It should not be\nset again, so that its observer won't be triggered. Can be:\n'model'|'formatted'|'serialized'."
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_callParser",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "?"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string|undefined"
                  },
                  "default": "this.formattedValue"
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_callFormatter",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string|undefined"
                }
              },
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_onModelValueChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "{ modelValue: unknown; }[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_dispatchModelValueChangedEvent",
              "privacy": "protected",
              "description": "This is wrapped in a distinct method, so that parents can control when the changed event\nis fired. For objects, a deep comparison might be needed.",
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "{ modelValue: unknown; }[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_syncValueUpwards",
              "privacy": "protected",
              "description": "Synchronization from `._inputNode.value` to `LionField` (flow [2])\nDownwards syncing should only happen for `LionField`.value changes from 'above'.\nThis triggers _onModelValueChanged and connects user input\nto the parsing/formatting/serializing loop.",
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_reflectBackFormattedValueToUser",
              "privacy": "protected",
              "description": "Synchronization from `LionField.value` to `._inputNode.value`\n- flow [1] will always be reflected back\n- flow [2] will not be reflected back when this flow was triggered via\n`@user-input-changed` (this will happen later, when `formatOn` condition is met)",
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_reflectBackOn",
              "privacy": "protected",
              "description": "Every time .formattedValue is attempted to sync to the view value (on change/blur and on\nmodelValue change), this condition is checked. When enhancing it, it's recommended to\ncall `super._reflectBackOn()`",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_proxyInputEvent",
              "privacy": "protected",
              "description": "This can be called whenever the view value should be updated. Dependent on component type\n(\"input\" for <input> or \"change\" for <select>(mainly for IE)) a different event should be\nused  as source for the \"user-input-changed\" event (which can be seen as an abstraction\nlayer on top of other events (input, change, whatever))",
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_onUserInputChanged",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__onCompositionEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__onPaste",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FormatMixin",
                "module": "./src/FormatMixin.js"
              }
            }
          ],
          "tagName": "lion-field"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionField",
          "declaration": {
            "name": "LionField",
            "module": "./src/LionField.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/NativeTextFieldMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NativeTextFieldMixin",
          "type": {
            "text": "typeof import(\"../types/NativeTextFieldMixinTypes.js\").NativeTextFieldImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NativeTextFieldMixin",
          "declaration": {
            "name": "NativeTextFieldMixin",
            "module": "./src/NativeTextFieldMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/NativeTextFieldMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "NativeTextFieldMixin",
          "parameters": [
            {
              "name": "superclass}",
              "type": {
                "text": "LitElement>"
              },
              "description": "superclass"
            }
          ],
          "mixins": [
            {
              "name": "FormatMixin",
              "module": "/src/FormatMixin.js"
            },
            {
              "name": "FocusMixin",
              "module": "/src/FocusMixin.js"
            },
            {
              "name": "FormControlMixin",
              "module": "/src/FormControlMixin.js"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLInputElement | HTMLTextAreaElement"
              }
            },
            {
              "kind": "field",
              "name": "selectionStart",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "selectionEnd",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_setValueAndPreserveCaret",
              "privacy": "protected",
              "description": "Restores the cursor to its original position after updating the value.",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "string"
                  },
                  "description": "The value that should be saved."
                }
              ]
            },
            {
              "kind": "method",
              "name": "_reflectBackFormattedValueToUser",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_focusableNode",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NativeTextFieldMixin",
          "declaration": {
            "name": "NativeTextFieldMixin",
            "module": "./src/NativeTextFieldMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test/FocusMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/FormControlMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/FormRegistrationMixins.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/FormatMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/InteractionStateMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/NativeTextFieldMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/lion-field.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/FormRegistrationMixins.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runRegistrationSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "customConfig",
              "type": {
                "text": "customConfig"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runRegistrationSuite",
          "declaration": {
            "name": "runRegistrationSuite",
            "module": "./test-suites/FormRegistrationMixins.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/FormatMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runFormatMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "customConfig",
              "type": {
                "text": "{\n    tagString?: string | undefined;\n    modelValueType?: ObjectConstructor | StringConstructor | BooleanConstructor | NumberConstructor | DateConstructor | ArrayConstructor | \"email\" | \"iban\" | undefined;\n} | undefined"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runFormatMixinSuite",
          "declaration": {
            "name": "runFormatMixinSuite",
            "module": "./test-suites/FormatMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/InteractionStateMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runInteractionStateMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "customConfig",
              "type": {
                "text": "{\n    tagString?: string | undefined;\n    allowedModelValueTypes?: (ObjectConstructor | StringConstructor | BooleanConstructor | NumberConstructor | DateConstructor | ArrayConstructor)[] | undefined;\n} | undefined"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runInteractionStateMixinSuite",
          "declaration": {
            "name": "runInteractionStateMixinSuite",
            "module": "./test-suites/InteractionStateMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/NativeTextFieldMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runNativeTextFieldMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "customConfig",
              "type": {
                "text": "{\n    tagString?: string | undefined;\n    modelValueType?: ObjectConstructor | StringConstructor | BooleanConstructor | NumberConstructor | DateConstructor | ArrayConstructor | \"email\" | \"iban\" | undefined;\n} | undefined"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runNativeTextFieldMixinSuite",
          "declaration": {
            "name": "runNativeTextFieldMixinSuite",
            "module": "./test-suites/NativeTextFieldMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/ValidateMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runValidateMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "customConfig",
              "type": {
                "text": "{\n    tagString?: string | null | undefined;\n    lightDom?: string | undefined;\n} | undefined"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runValidateMixinSuite",
          "declaration": {
            "name": "runValidateMixinSuite",
            "module": "./test-suites/ValidateMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/ValidateMixinFeedbackPart.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runValidateMixinFeedbackPart",
          "return": {
            "type": {
              "text": "void"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runValidateMixinFeedbackPart",
          "declaration": {
            "name": "runValidateMixinFeedbackPart",
            "module": "./test-suites/ValidateMixinFeedbackPart.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/index.d.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "runChoiceGroupMixinSuite",
          "declaration": {
            "name": "runChoiceGroupMixinSuite",
            "module": "\"./choice-group/ChoiceGroupMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runChoiceInputMixinSuite",
          "declaration": {
            "name": "runChoiceInputMixinSuite",
            "module": "\"./choice-group/ChoiceInputMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runFormGroupMixinInputSuite",
          "declaration": {
            "name": "runFormGroupMixinInputSuite",
            "module": "\"./form-group/FormGroupMixin-input.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runFormGroupMixinSuite",
          "declaration": {
            "name": "runFormGroupMixinSuite",
            "module": "\"./form-group/FormGroupMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runFormatMixinSuite",
          "declaration": {
            "name": "runFormatMixinSuite",
            "module": "\"./FormatMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runRegistrationSuite",
          "declaration": {
            "name": "runRegistrationSuite",
            "module": "\"./FormRegistrationMixins.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runInteractionStateMixinSuite",
          "declaration": {
            "name": "runInteractionStateMixinSuite",
            "module": "\"./InteractionStateMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runNativeTextFieldMixinSuite",
          "declaration": {
            "name": "runNativeTextFieldMixinSuite",
            "module": "\"./NativeTextFieldMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runValidateMixinSuite",
          "declaration": {
            "name": "runValidateMixinSuite",
            "module": "\"./ValidateMixin.suite.js\""
          }
        },
        {
          "kind": "js",
          "name": "runValidateMixinFeedbackPart",
          "declaration": {
            "name": "runValidateMixinFeedbackPart",
            "module": "\"./ValidateMixinFeedbackPart.suite.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "runChoiceGroupMixinSuite",
          "declaration": {
            "name": "runChoiceGroupMixinSuite",
            "module": "./choice-group/ChoiceGroupMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runChoiceInputMixinSuite",
          "declaration": {
            "name": "runChoiceInputMixinSuite",
            "module": "./choice-group/ChoiceInputMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runFormGroupMixinInputSuite",
          "declaration": {
            "name": "runFormGroupMixinInputSuite",
            "module": "./form-group/FormGroupMixin-input.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runFormGroupMixinSuite",
          "declaration": {
            "name": "runFormGroupMixinSuite",
            "module": "./form-group/FormGroupMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runFormatMixinSuite",
          "declaration": {
            "name": "runFormatMixinSuite",
            "module": "./FormatMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runRegistrationSuite",
          "declaration": {
            "name": "runRegistrationSuite",
            "module": "./FormRegistrationMixins.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runInteractionStateMixinSuite",
          "declaration": {
            "name": "runInteractionStateMixinSuite",
            "module": "./InteractionStateMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runNativeTextFieldMixinSuite",
          "declaration": {
            "name": "runNativeTextFieldMixinSuite",
            "module": "./NativeTextFieldMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runValidateMixinSuite",
          "declaration": {
            "name": "runValidateMixinSuite",
            "module": "./ValidateMixin.suite.js"
          }
        },
        {
          "kind": "js",
          "name": "runValidateMixinFeedbackPart",
          "declaration": {
            "name": "runValidateMixinFeedbackPart",
            "module": "./ValidateMixinFeedbackPart.suite.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/FocusMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FocusHost",
          "members": [
            {
              "kind": "field",
              "name": "focused",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "focusedVisible",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "privacy": "public",
              "description": "Calls `focus()` on focusable element within",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "blur",
              "privacy": "public",
              "description": "Calls `blur()` on focusable element within",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_focusableNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "__onFocus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__onBlur",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__registerEventsForFocusMixin",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__teardownEventsForFocusMixin",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "FocusImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FocusHost> &\n  Pick<typeof FocusHost, keyof typeof FocusHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FocusHost",
          "declaration": {
            "name": "FocusHost",
            "module": "./types/FocusMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FocusImplementation",
          "declaration": {
            "name": "FocusImplementation",
            "module": "./types/FocusMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/FormControlMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormControlHost",
          "members": [
            {
              "kind": "field",
              "name": "readOnly",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "modelValue",
              "privacy": "public",
              "type": {
                "text": "any | Unparseable"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "helpText",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "fieldName",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "addToAriaLabelledBy",
              "privacy": "public",
              "description": "Allows to add extra element references to aria-labelledby attribute.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{\n      idPrefix?: string | undefined;\n      reorder?: boolean | undefined;\n    }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addToAriaDescribedBy",
              "privacy": "public",
              "description": "Allows to add extra element references to aria-describedby attribute.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{\n      idPrefix?: string | undefined;\n      reorder?: boolean | undefined;\n    }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeFromAriaLabelledBy",
              "privacy": "public",
              "description": "Allows to remove element references from aria-labelledby attribute.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{\n      reorder?: boolean | undefined;\n    }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeFromAriaDescribedBy",
              "privacy": "public",
              "description": "Allows to remove element references from aria-describedby attribute.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "customConfig",
                  "type": {
                    "text": "{\n      reorder?: boolean | undefined;\n    }"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElementWithValue | HTMLInputElement | HTMLTextAreaElement"
              }
            },
            {
              "kind": "field",
              "name": "_labelNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_helpTextNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_feedbackNode",
              "privacy": "protected",
              "type": {
                "text": "LionValidationFeedback"
              }
            },
            {
              "kind": "field",
              "name": "_inputId",
              "privacy": "protected",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "_ariaLabelledNodes",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement[]"
              }
            },
            {
              "kind": "field",
              "name": "_ariaDescribedNodes",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement[]"
              }
            },
            {
              "kind": "field",
              "name": "_repropagationRole",
              "privacy": "protected",
              "type": {
                "text": "'child' | 'choice-group' | 'fieldset'"
              }
            },
            {
              "kind": "field",
              "name": "_isRepropagationEndpoint",
              "privacy": "protected",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_parentFormGroup",
              "privacy": "protected",
              "type": {
                "text": "FormControlHost | undefined"
              }
            },
            {
              "kind": "method",
              "name": "_groupOneTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_groupTwoTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_labelTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_helpTextTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupBeforeTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupPrefixTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | typeof nothing"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupInputTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupSuffixTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | typeof nothing"
                }
              }
            },
            {
              "kind": "method",
              "name": "_inputGroupAfterTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_feedbackTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomClasses",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomA11y",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_enhanceLightDomA11yForAdditionalSlots",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "additionalSlots",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getAriaDescriptionElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "_dispatchInitialModelValueChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onBeforeRepropagateChildrenValues",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_repropagationCondition",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__helpText",
              "privacy": "private",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "__label",
              "privacy": "private",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "__fieldName",
              "privacy": "private",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "__reorderAriaLabelledNodes",
              "privacy": "private",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "method",
              "name": "__reflectAriaAttr",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "attrName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "nodes",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "reorder",
                  "type": {
                    "text": "boolean | undefined"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__reorderAriaDescribedNodes",
              "privacy": "private",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "method",
              "name": "__getDirectSlotChild",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "slotName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__repropagateChildrenInitialized",
              "privacy": "private",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "method",
              "name": "__repropagateChildrenValues",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "FormControlImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FormControlHost> &\n  Pick<typeof FormControlHost, keyof typeof FormControlHost> &\n  Constructor<FormRegisteringHost> &\n  Pick<typeof FormRegisteringHost, keyof typeof FormRegisteringHost> &\n  Constructor<DisabledHost> &\n  Pick<typeof DisabledHost, keyof typeof DisabledHost> &\n  Constructor<SlotHost> &\n  Pick<typeof SlotHost, keyof typeof SlotHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControlHost",
          "declaration": {
            "name": "FormControlHost",
            "module": "./types/FormControlMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormControlImplementation",
          "declaration": {
            "name": "FormControlImplementation",
            "module": "./types/FormControlMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/FormatMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormatHost",
          "members": [
            {
              "kind": "method",
              "name": "parser",
              "privacy": "public",
              "description": "Converts viewValue to modelValue\nFor instance, a localized date to a Date Object",
              "return": {
                "type": {
                  "text": "unknown"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "viewValue: the formatted value inside <input>"
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "FormatNumberOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formatter",
              "privacy": "public",
              "description": "Converts modelValue to formattedValue (formattedValue will be synced with\n`._inputNode.value`)\nFor instance, a Date object to a localized date.",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "FormatNumberOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "serializer",
              "privacy": "public",
              "description": "Converts `.modelValue` to `.serializedValue`\nFor instance, a Date object to an iso formatted date string",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                }
              ]
            },
            {
              "kind": "method",
              "name": "deserializer",
              "privacy": "public",
              "description": "Converts `.serializedValue` to `.modelValue`\nFor instance, an iso formatted date string to a Date object",
              "return": {
                "type": {
                  "text": "unknown"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "modelValue: can be an Object, Number, String depending on the\ninput type(date, number, email etc)"
                }
              ]
            },
            {
              "kind": "method",
              "name": "preprocessor",
              "privacy": "public",
              "description": "Preprocesses the viewValue before it's parsed to a modelValue. Can be used to filter\ninvalid input amongst others.",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "string"
                  },
                  "description": "the raw value from the <input> after keyUp/Down event"
                }
              ]
            },
            {
              "kind": "field",
              "name": "formattedValue",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "serializedValue",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "formatOn",
              "privacy": "protected",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "formatOptions",
              "privacy": "public",
              "type": {
                "text": "FormatNumberOptions"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "_isHandlingUserInput",
              "privacy": "protected",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_isPasting",
              "privacy": "protected",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "_calculateValues",
              "privacy": "protected",
              "description": "Responsible for storing all representations(modelValue, serializedValue, formattedValue\nand value) of the input value. Prevents infinite loops, so all value observers can be\ntreated like they will only be called once, without indirectly calling other observers.\n(in fact, some are called twice, but the __preventRecursiveTrigger lock prevents the\nsecond call from having effect).",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "{source:'model'|'serialized'|'formatted'|null}"
                  },
                  "description": "the type of value that triggered this method. It should not be set again, so that its\nobserver won't be triggered. Can be: 'model'|'formatted'|'serialized'."
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "{ source: 'model' | 'serialized' | 'formatted' | null }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onModelValueChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "arg",
                  "type": {
                    "text": "{ modelValue: unknown }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchModelValueChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_syncValueUpwards",
              "privacy": "protected",
              "description": "Synchronization from `._inputNode.value` to `LionField` (flow [2])\nDownwards syncing should only happen for `LionField`.value changes from 'above'.\nThis triggers _onModelValueChanged and connects user input\nto the parsing/formatting/serializing loop.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_reflectBackFormattedValueToUser",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_reflectBackFormattedValueDebounced",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_reflectBackOn",
              "privacy": "protected",
              "description": "Every time .formattedValue is attempted to sync to the view value (on change/blur and on\nmodelValue change), this condition is checked. When enhancing it, it's recommended to\ncall `super._reflectBackOn()`",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "_proxyInputEvent",
              "privacy": "protected",
              "description": "This can be called whenever the view value should be updated. Dependent on component type\n(\"input\" for <input> or \"change\" for <select>(mainly for IE)) a different event should be\nused  as source for the \"user-input-changed\" event (which can be seen as an abstraction\nlayer on top of other events (input, change, whatever))",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onUserInputChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_callParser",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "object"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_callFormatter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "__preventRecursiveTrigger",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__prevViewValue",
              "privacy": "private",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "FormatImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FormatHost> &\n  Pick<typeof FormatHost, keyof typeof FormatHost> &\n  Constructor<ValidateHost> &\n  Pick<typeof ValidateHost, keyof typeof ValidateHost> &\n  Constructor<FormControlHost> &\n  Pick<typeof FormControlHost, keyof typeof FormControlHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormatHost",
          "declaration": {
            "name": "FormatHost",
            "module": "./types/FormatMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormatImplementation",
          "declaration": {
            "name": "FormatImplementation",
            "module": "./types/FormatMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/InteractionStateMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "InteractionStateHost",
          "members": [
            {
              "kind": "field",
              "name": "touched",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "dirty",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "prefilled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "filled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "submitted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "initInteractionState",
              "privacy": "public",
              "description": "Evaluations performed on connectedCallback.\nThis method is public, so it can be called at a later moment (when we need to wait for\nregistering children for instance) as well.\nSince this method will be called twice in last mentioned scenario, it must stay idempotent.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "resetInteractionState",
              "privacy": "public",
              "description": "Resets touched and dirty, and recomputes prefilled",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_leaveEvent",
              "privacy": "protected",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "_valueChangedEvent",
              "privacy": "protected",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "_iStateOnLeave",
              "privacy": "protected",
              "description": "Sets touched value to true and reevaluates prefilled state.\nWhen false, on next interaction, user will start with a clean state.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_iStateOnValueChange",
              "privacy": "protected",
              "description": "Sets dirty value and validates when already touched or invalid",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onTouchedChanged",
              "privacy": "protected",
              "description": "Dispatches event on touched state change",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onDirtyChanged",
              "privacy": "protected",
              "description": "Dispatches event on touched state change",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "InteractionStateImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<InteractionStateHost> &\n  Pick<typeof InteractionStateHost, keyof typeof InteractionStateHost> &\n  Constructor<FormControlHost> &\n  Pick<typeof FormControlHost, keyof typeof FormControlHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InteractionStateHost",
          "declaration": {
            "name": "InteractionStateHost",
            "module": "./types/InteractionStateMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "InteractionStateImplementation",
          "declaration": {
            "name": "InteractionStateImplementation",
            "module": "./types/InteractionStateMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/NativeTextFieldMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "NativeTextFieldHost",
          "members": [
            {
              "kind": "field",
              "name": "autocomplete",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "selectionStart",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "selectionEnd",
              "privacy": "public",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "_setValueAndPreserveCaret",
              "privacy": "protected",
              "description": "Restores the cursor to its original position after updating the value.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "NativeTextFieldImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<NativeTextFieldHost> &\n  Pick<typeof NativeTextFieldHost, keyof typeof NativeTextFieldHost> &\n  Constructor<FormatHost> &\n  Pick<typeof FormatHost, keyof typeof FormatHost> &\n  Constructor<FocusHost> &\n  Pick<typeof FocusHost, keyof typeof FocusHost> &\n  Constructor<FormControlHost> &\n  Pick<typeof FormControlHost, keyof typeof FormControlHost>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NativeTextFieldHost",
          "declaration": {
            "name": "NativeTextFieldHost",
            "module": "./types/NativeTextFieldMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "NativeTextFieldImplementation",
          "declaration": {
            "name": "NativeTextFieldImplementation",
            "module": "./types/NativeTextFieldMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/choice-group/ChoiceGroupMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ChoiceGroupMixin",
          "type": {
            "text": "typeof import(\"../../types/choice-group/ChoiceGroupMixinTypes.js\").ChoiceGroupImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceGroupMixin",
          "declaration": {
            "name": "ChoiceGroupMixin",
            "module": "./src/choice-group/ChoiceGroupMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/choice-group/ChoiceGroupMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "ChoiceGroupMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "mixins": [
            {
              "name": "FormRegistrarMixin",
              "module": "/src/registration/FormRegistrarMixin.js"
            },
            {
              "name": "InteractionStateMixin",
              "module": "/src/choice-group/InteractionStateMixin.js"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "modelValue",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "serializedValue",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "formattedValue",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_completeRegistration",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addFormElement",
              "privacy": "public",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControl"
                  }
                },
                {
                  "name": "indexToInsertAt",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElementsFilter",
              "privacy": "public",
              "description": "A filter function which will exclude a form field when returning false\nBy default, exclude form fields which are disabled\n\nThe type is be passed as well for more fine grained control, e.g.\ndistinguish the filter when fetching modelValue versus serializedValue",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "FormControl"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElements",
              "privacy": "protected",
              "description": "Implicit :( @override for FormGroupMixin, as choice fields \"fieldsets\"\nwill always implement both mixins\n\nTODO: Consider making this explicit by extracting this method to its own mixin and\nusing it in both FormGroupMixin and ChoiceGroupMixin, then override it here\nThis also makes it more DRY as we have same method with similar implementation\nin FormGroupMixin. I (@jorenbroekema) think the abstraction is worth it here..",
              "return": {
                "type": {
                  "text": "{[name:string]: any}"
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "filterFn",
                  "type": {
                    "text": "(el: FormControl, property?: string) => boolean"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "_throwWhenInvalidChildModelValue",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControl"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_checkSingleChoiceElements",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent & {target:FormControl}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getCheckedElements",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_setCheckedElements",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | any[]"
                  }
                },
                {
                  "name": "check",
                  "type": {
                    "text": "Function"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setChoiceGroupTouched",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onBeforeRepropagateChildrenValues",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_repropagationCondition",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "FormControlHost & ChoiceInputHost"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceGroupMixin",
          "declaration": {
            "name": "ChoiceGroupMixin",
            "module": "./src/choice-group/ChoiceGroupMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/choice-group/ChoiceInputMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ChoiceInputMixin",
          "type": {
            "text": "typeof import(\"../../types/choice-group/ChoiceInputMixinTypes.js\").ChoiceInputImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceInputMixin",
          "declaration": {
            "name": "ChoiceInputMixin",
            "module": "./src/choice-group/ChoiceInputMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/choice-group/ChoiceInputMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "ChoiceInputMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "mixins": [
            {
              "name": "FormatMixin",
              "module": "/src/choice-group/FormatMixin.js"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "choiceValue",
              "privacy": "public",
              "type": {
                "text": "string|any"
              }
            },
            {
              "kind": "method",
              "name": "requestUpdate",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "description": "Template for [input=radio] and [input=checkbox] wrappers.\nFor [role=option] extensions, please override completely"
            },
            {
              "kind": "method",
              "name": "_choiceGraphicTemplate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_afterTemplate",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_preventDuplicateLabelClick",
              "privacy": "protected",
              "description": "The native platform fires an event for both the click on the label, and also\nthe redispatched click on the native input element.\nThis results in two click events arriving at the host, but we only want one.\nThis method prevents the duplicate click and ensures the correct isTrusted event\nwith the correct event.target arrives at the host.",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncNameToParentFormGroup",
              "privacy": "protected",
              "description": "Override this in case of extending ChoiceInputMixin and requiring\nto sync differently with parent form group name\nRight now it checks tag name match where the parent form group tagname\nshould include the child field tagname ('checkbox' is included in 'checkbox-group')"
            },
            {
              "kind": "method",
              "name": "__syncModelCheckedToChecked",
              "privacy": "private",
              "parameters": [
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__syncCheckedToModel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "checked",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__syncCheckedToInputElement",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_proxyInputEvent",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_onModelValueChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "newV",
                  "type": {
                    "text": "{ modelValue:unknown }"
                  }
                },
                {
                  "name": "old",
                  "type": {
                    "text": "{ modelValue:unknown }"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "parser",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "formatter",
              "privacy": "public",
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "ChoiceInputModelValue "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected",
              "description": "Used for required validator."
            },
            {
              "kind": "method",
              "name": "_syncValueUpwards",
              "privacy": "protected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceInputMixin",
          "declaration": {
            "name": "ChoiceInputMixin",
            "module": "./src/choice-group/ChoiceInputMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/form-group/FormElementsHaveNoError.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormElementsHaveNoError",
          "superclass": {
            "name": "Validator",
            "module": "./src/form-group/FormElementsHaveNoError.d.ts"
          },
          "members": [
            {
              "kind": "method",
              "name": "getMessage",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormElementsHaveNoError",
          "declaration": {
            "name": "FormElementsHaveNoError",
            "module": "./src/form-group/FormElementsHaveNoError.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/form-group/FormElementsHaveNoError.js",
      "declarations": [
        {
          "kind": "class",
          "name": "FormElementsHaveNoError",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  },
                  "optional": true
                },
                {
                  "name": "options",
                  "type": {
                    "text": "string | undefined"
                  },
                  "optional": true
                },
                {
                  "name": "config",
                  "type": {
                    "text": "{ node: any }"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMessage",
              "privacy": "public",
              "static": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormElementsHaveNoError",
          "declaration": {
            "name": "FormElementsHaveNoError",
            "module": "./src/form-group/FormElementsHaveNoError.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/form-group/FormGroupMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormGroupMixin",
          "type": {
            "text": "typeof import(\"../../types/form-group/FormGroupMixinTypes.js\").FormGroupImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormGroupMixin",
          "declaration": {
            "name": "FormGroupMixin",
            "module": "./src/form-group/FormGroupMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/form-group/FormGroupMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "FormGroupMixin",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "mixins": [
            {
              "name": "FormRegistrarMixin",
              "module": "/src/registration/FormRegistrarMixin.js"
            },
            {
              "name": "FormControlMixin",
              "module": "/src/form-group/FormControlMixin.js"
            },
            {
              "name": "ValidateMixin",
              "module": "/src/form-group/validate/ValidateMixin.js"
            },
            {
              "name": "DisabledMixin",
              "package": "@lion/core"
            },
            {
              "name": "SlotMixin",
              "package": "@lion/core"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "modelValue",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "serializedValue",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "formattedValue",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "prefilled",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__initInteractionStates",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupOutsideClickHandling",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_checkForOutsideClick",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__requestChildrenToBeDisabled",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__retractRequestChildrenToBeDisabled",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_inputGroupTemplate",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "submitGroup",
              "privacy": "public",
              "description": "Handles interaction state 'submitted'.\nThis allows children to enable visibility of validation feedback"
            },
            {
              "kind": "method",
              "name": "resetGroup",
              "privacy": "public",
              "description": "Resets to initial/prefilled values and interaction states of all FormControls in group,"
            },
            {
              "kind": "method",
              "name": "clearGroup",
              "privacy": "public",
              "description": "Clears all values and resets all interaction states of all FormControls in group,"
            },
            {
              "kind": "method",
              "name": "resetInteractionState",
              "privacy": "public",
              "description": "Resets all interaction states for all formElements"
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElementsFilter",
              "privacy": "public",
              "description": "A filter function which will exclude a form field when returning false\nBy default, exclude form fields which are disabled\n\nThe type is be passed as well for more fine grained control, e.g.\ndistinguish the filter when fetching modelValue versus serializedValue",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "FormControl"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElements",
              "privacy": "public",
              "description": "Gets a keyed be name object for requested property (like modelValue/serializedValue)",
              "return": {
                "type": {
                  "text": "{[name:string]: any}"
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "filterFn",
                  "type": {
                    "text": "(el: FormControl, property?: string) => boolean"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setValueForAllFormElements",
              "privacy": "public",
              "description": "Sets the same value for requested property in all formElements",
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string | number"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setValueMapForAllFormElements",
              "privacy": "public",
              "description": "Allows to set formElements values via a keyed object structure",
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "values",
                  "type": {
                    "text": "{ [x: string]: any; }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_anyFormElementHas",
              "privacy": "public",
              "description": "Returns true when one of the formElements has requested",
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_anyFormElementHasFeedbackFor",
              "privacy": "public",
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "string"
                  },
                  "description": "one of ValidateHost.validationTypes"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_everyFormElementHas",
              "privacy": "public",
              "description": "Returns true when all of the formElements have requested property",
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__onChildValidatePerformed",
              "privacy": "public",
              "description": "Gets triggered by event 'validate-performed' which enabled us to handle 2 different situations\n- react on modelValue change, which says something about the validity as a whole\n(at least two checkboxes for instance) and nothing about the children's values\n- children validity states have changed, so fieldset needs to update itself based on that",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncFocused",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_onFocusOut",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncDirty",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__storeAllDescriptionElementsInParentChain",
              "privacy": "public",
              "description": "Traverses the _parentFormGroup tree, and gathers all aria description elements\n(feedback and helptext) that should be provided to children.\n\nIn the example below, when the input for 'street' has focus, a screenreader user\nwould hear the #group-error.\nIn case one of the inputs was in error state as well, the SR user would\nfirst hear the local error, followed by #group-error"
            },
            {
              "kind": "method",
              "name": "__linkParentMessages",
              "privacy": "public",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControl"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__unlinkParentMessages",
              "privacy": "public",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControl"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addFormElement",
              "privacy": "public",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControl & {serializedValue:string|object}"
                  }
                },
                {
                  "name": "indexToInsertAt",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_initialModelValue",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "removeFormElement",
              "privacy": "public",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "FormRegisteringHost & FormControl"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormGroupMixin",
          "declaration": {
            "name": "FormGroupMixin",
            "module": "./src/form-group/FormGroupMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormControlsCollection.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormControlsCollection",
          "superclass": {
            "name": "Array",
            "module": "./src/registration/FormControlsCollection.d.ts"
          },
          "members": [
            {
              "kind": "method",
              "name": "_keys",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControlsCollection",
          "declaration": {
            "name": "FormControlsCollection",
            "module": "./src/registration/FormControlsCollection.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormControlsCollection.js",
      "declarations": [
        {
          "kind": "class",
          "name": "FormControlsCollection",
          "superclass": {
            "name": "Array",
            "module": "./src/registration/FormControlsCollection.js"
          },
          "members": [
            {
              "kind": "method",
              "name": "_keys",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControlsCollection",
          "declaration": {
            "name": "FormControlsCollection",
            "module": "./src/registration/FormControlsCollection.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormRegisteringMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormRegisteringMixin",
          "type": {
            "text": "typeof import(\"../../types/registration/FormRegisteringMixinTypes\").FormRegisteringImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegisteringMixin",
          "declaration": {
            "name": "FormRegisteringMixin",
            "module": "./src/registration/FormRegisteringMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormRegisteringMixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormRegisteringMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegisteringMixin",
          "declaration": {
            "name": "FormRegisteringMixin",
            "module": "./src/registration/FormRegisteringMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormRegistrarMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormRegistrarMixin",
          "type": {
            "text": "typeof import(\"../../types/registration/FormRegistrarMixinTypes.js\").FormRegistrarImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegistrarMixin",
          "declaration": {
            "name": "FormRegistrarMixin",
            "module": "./src/registration/FormRegistrarMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormRegistrarMixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormRegistrarMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegistrarMixin",
          "declaration": {
            "name": "FormRegistrarMixin",
            "module": "./src/registration/FormRegistrarMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormRegistrarPortalMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormRegistrarPortalMixin",
          "type": {
            "text": "typeof import(\"../../types/registration/FormRegistrarPortalMixinTypes\").FormRegistrarPortalImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegistrarPortalMixin",
          "declaration": {
            "name": "FormRegistrarPortalMixin",
            "module": "./src/registration/FormRegistrarPortalMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/registration/FormRegistrarPortalMixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "FormRegistrarPortalMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegistrarPortalMixin",
          "declaration": {
            "name": "FormRegistrarPortalMixin",
            "module": "./src/registration/FormRegistrarPortalMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/AsyncQueue.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "AsyncQueue",
          "members": [
            {
              "kind": "field",
              "name": "__running",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__queue",
              "privacy": "public",
              "type": {
                "text": "Function[]"
              }
            },
            {
              "kind": "method",
              "name": "add",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "task",
                  "type": {
                    "text": "Function"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "complete",
              "privacy": "public",
              "type": {
                "text": "Promise<any> | undefined"
              }
            },
            {
              "kind": "field",
              "name": "__callComplete",
              "privacy": "public",
              "type": {
                "text": "Function | undefined"
              }
            },
            {
              "kind": "field",
              "name": "__run",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AsyncQueue",
          "declaration": {
            "name": "AsyncQueue",
            "module": "./src/utils/AsyncQueue.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/AsyncQueue.js",
      "declarations": [
        {
          "kind": "class",
          "name": "AsyncQueue",
          "members": [
            {
              "kind": "method",
              "name": "add",
              "privacy": "public",
              "parameters": [
                {
                  "name": "task",
                  "type": {
                    "text": "function"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__run",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AsyncQueue",
          "declaration": {
            "name": "AsyncQueue",
            "module": "./src/utils/AsyncQueue.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/SyncUpdatableMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SyncUpdatableMixin",
          "type": {
            "text": "typeof import(\"../../types/utils/SyncUpdatableMixinTypes\").SyncUpdatableImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SyncUpdatableMixin",
          "declaration": {
            "name": "SyncUpdatableMixin",
            "module": "./src/utils/SyncUpdatableMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/SyncUpdatableMixin.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "SyncUpdatableMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SyncUpdatableMixin",
          "declaration": {
            "name": "SyncUpdatableMixin",
            "module": "./src/utils/SyncUpdatableMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/getAriaElementsInRightDomOrder.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getAriaElementsInRightDomOrder",
          "return": {
            "type": {
              "text": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "descriptionElements",
              "type": {
                "text": "HTMLElement[]"
              },
              "description": "holds references to description or label elements whose\nid should be returned"
            },
            {
              "name": "opts",
              "type": {
                "text": "Object"
              }
            },
            {
              "name": "opts.reverse",
              "type": {
                "text": "boolean"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAriaElementsInRightDomOrder",
          "declaration": {
            "name": "getAriaElementsInRightDomOrder",
            "module": "./src/utils/getAriaElementsInRightDomOrder.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/getAriaElementsInRightDomOrder.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getAriaElementsInRightDomOrder",
          "return": {
            "type": {
              "text": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "descriptionElements",
              "type": {
                "text": "HTMLElement[]"
              },
              "description": "holds references to description or label elements whose\nid should be returned"
            },
            {
              "name": "opts",
              "type": {
                "text": "Object"
              }
            },
            {
              "name": "opts.reverse",
              "type": {
                "text": "boolean"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAriaElementsInRightDomOrder",
          "declaration": {
            "name": "getAriaElementsInRightDomOrder",
            "module": "./src/utils/getAriaElementsInRightDomOrder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/pascalCase.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pascalCase",
          "description": "Return PascalCased version of the camelCased string",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pascalCase",
          "declaration": {
            "name": "pascalCase",
            "module": "./src/utils/pascalCase.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/pascalCase.js",
      "declarations": [
        {
          "kind": "function",
          "name": "pascalCase",
          "description": "Return PascalCased version of the camelCased string",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pascalCase",
          "declaration": {
            "name": "pascalCase",
            "module": "./src/utils/pascalCase.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/LionValidationFeedback.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "LionValidationFeedback",
          "superclass": {
            "name": "LitElement",
            "package": "@lion/core"
          },
          "members": [
            {
              "kind": "method",
              "name": "_messageTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string | Node | import(\"@lion/core\").TemplateResult<1 | 2>"
                }
              },
              "parameters": [
                {
                  "name": "opts",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "opts.message",
                  "type": {
                    "text": "string | Node | TemplateResult "
                  },
                  "description": "message or feedback node or TemplateResult"
                },
                {
                  "name": "opts.type",
                  "type": {
                    "text": "string"
                  },
                  "optional": true
                },
                {
                  "name": "opts.validator",
                  "type": {
                    "text": "Validator"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "currentType",
              "privacy": "public",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "removeMessage",
              "privacy": "public",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "feedbackData",
              "privacy": "public",
              "type": {
                "text": "messageMap[] | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionValidationFeedback",
          "declaration": {
            "name": "LionValidationFeedback",
            "module": "./src/validate/LionValidationFeedback.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/LionValidationFeedback.js",
      "declarations": [
        {
          "kind": "class",
          "name": "LionValidationFeedback",
          "superclass": {
            "name": "LitElement",
            "package": "@lion/core"
          },
          "members": [
            {
              "kind": "method",
              "name": "_messageTemplate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "opts",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "opts.message",
                  "type": {
                    "text": "string | Node | TemplateResult "
                  },
                  "description": "message or feedback node or TemplateResult"
                },
                {
                  "name": "opts.type",
                  "type": {
                    "text": "string"
                  },
                  "optional": true
                },
                {
                  "name": "opts.validator",
                  "type": {
                    "text": "Validator"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "feedbackData",
              "privacy": "public"
            }
          ],
          "tagName": "lion-validation-feedback"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LionValidationFeedback",
          "declaration": {
            "name": "LionValidationFeedback",
            "module": "./src/validate/LionValidationFeedback.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/ResultValidator.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ResultValidator",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/Validator.js"
          },
          "members": [
            {
              "kind": "method",
              "name": "executeOnResults",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "context.regularValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.prevValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.prevShownValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.validators",
                  "type": {
                    "text": "Validator[]"
                  },
                  "optional": true
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ResultValidator",
          "declaration": {
            "name": "ResultValidator",
            "module": "./src/validate/ResultValidator.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/ResultValidator.js",
      "declarations": [
        {
          "kind": "class",
          "name": "ResultValidator",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/Validator.js"
          },
          "members": [
            {
              "kind": "method",
              "name": "executeOnResults",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "context.regularValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.prevValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.prevShownValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.validators",
                  "type": {
                    "text": "Validator[]"
                  },
                  "optional": true
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ResultValidator",
          "declaration": {
            "name": "ResultValidator",
            "module": "./src/validate/ResultValidator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/Unparseable.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "Unparseable",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "privacy": "public",
              "type": {
                "text": "'unparseable'"
              }
            },
            {
              "kind": "field",
              "name": "viewValue",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Unparseable",
          "declaration": {
            "name": "Unparseable",
            "module": "./src/validate/Unparseable.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/Unparseable.js",
      "declarations": [
        {
          "kind": "class",
          "name": "Unparseable",
          "members": [
            {
              "kind": "method",
              "name": "toString",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Unparseable",
          "declaration": {
            "name": "Unparseable",
            "module": "./src/validate/Unparseable.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/ValidateMixin.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ValidateMixinImplementation",
          "description": "Handles all validation, based on modelValue changes. It has no knowledge about dom and\nUI. All error visibility, dom interaction and accessibility are handled in FeedbackMixin.",
          "type": {
            "text": "ValidateMixin"
          }
        },
        {
          "kind": "variable",
          "name": "ValidateMixin",
          "type": {
            "text": "typeof import(\"../../types/validate/ValidateMixinTypes.js\").ValidateImplementation"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidateMixinImplementation",
          "declaration": {
            "name": "ValidateMixinImplementation",
            "module": "./src/validate/ValidateMixin.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValidateMixin",
          "declaration": {
            "name": "ValidateMixin",
            "module": "./src/validate/ValidateMixin.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/ValidateMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "ValidateMixinImplementation",
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "LitElement>"
              },
              "description": ""
            }
          ],
          "events": [
            {
              "name": "showsFeedbackForChanged",
              "type": {
                "text": "Event"
              }
            },
            {
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "shouldShowFeedbackForChanged",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "validate-performed",
              "type": {
                "text": "Event"
              },
              "description": "private event that should be listened to by LionFieldSet"
            }
          ],
          "mixins": [
            {
              "name": "FormControlMixin",
              "module": "/src/validate/FormControlMixin.js"
            },
            {
              "name": "SyncUpdatableMixin",
              "module": "/src/utils/SyncUpdatableMixin.js"
            },
            {
              "name": "DisabledMixin",
              "package": "@lion/core"
            },
            {
              "name": "SlotMixin",
              "package": "@lion/core"
            },
            {
              "name": "ScopedElementsMixin",
              "package": "@lion/core"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "validationTypes",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "ValidationType[]"
              }
            },
            {
              "kind": "field",
              "name": "slots",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_allValidators",
              "privacy": "protected",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateSync",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "description": "Triggered by:\n- modelValue change\n- change in the 'validators' array\n-  change in the config of an individual Validator\n\nThree situations are handled:\n- a1) the FormControl is empty: further execution is halted. When the Required Validator\n(being mutually exclusive to the other Validators) is applied, it will end up in the\nvalidation result (as the only Validator, since further execution was halted).\n- a2) there are synchronous Validators: this is the most common flow. When modelValue hasn't\nchanged since last async results were generated, 'sync results' are merged with the\n'async results'.\n- a3) there are asynchronous Validators: for instance when server side evaluation is needed.\nExecutions are scheduled and awaited and the 'async results' are merged with the\n'sync results'.\n\n- b) there are ResultValidators. After steps a1, a2, or a3 are finished, the holistic\nResultValidators (evaluating the total result of the 'regular' (a1, a2 and a3) validators)\nwill be run...\n\nSituations a2 and a3 are not mutually exclusive and can be triggered within one `validate()`\ncall. Situation b will occur after every call.",
              "parameters": [
                {
                  "name": "opts",
                  "type": {
                    "text": "{ clearCurrentResult?: boolean }"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "__executeValidators",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__executeSyncValidators",
              "privacy": "private",
              "description": "step a2 (as explained in `validate()`): calls `__finishValidation`",
              "parameters": [
                {
                  "name": "syncValidators",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  }
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "{ hasAsync: boolean }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__executeAsyncValidators",
              "privacy": "private",
              "description": "step a3 (as explained in `validate()`), calls __finishValidation",
              "parameters": [
                {
                  "name": "asyncValidators",
                  "type": {
                    "text": "Validator[]"
                  },
                  "description": "all Validators except required and ResultValidators"
                },
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__executeResultValidators",
              "privacy": "private",
              "description": "step b (as explained in `validate()`), called by __finishValidation",
              "parameters": [
                {
                  "name": "regularValidationResult",
                  "type": {
                    "text": "Validator[]"
                  },
                  "description": "result of steps 1-3"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__finishValidation",
              "privacy": "private",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "object"
                  }
                },
                {
                  "name": "options.source",
                  "type": {
                    "text": "'sync'|'async'"
                  }
                },
                {
                  "name": "options.hasAsync",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "whether async validators are configured in this run.",
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "__clearValidationResults",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__onValidatorUpdated",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event|CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupValidators",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "__isEmpty",
              "privacy": "private",
              "description": "Helper method for the mutually exclusive Required Validator",
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__getFeedbackMessages",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise.<FeedbackMessage[]>"
                }
              },
              "parameters": [
                {
                  "name": "validators",
                  "type": {
                    "text": "Validator[]"
                  },
                  "description": "list of objects having a .getMessage method"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateFeedbackComponent",
              "privacy": "protected",
              "description": "Responsible for retrieving messages from Validators and\n(delegation of) rendering them.\n\nFor `._feedbackNode` (extension of LionValidationFeedback):\n- retrieve messages from highest prio Validators\n- provide the result to custom feedback node and let the\ncustom node decide on their renderings\n\nIn both cases:\n- we compute the 'show' flag (like 'hasErrorVisible') for all types\n- we set the customValidity message of the highest prio Validator\n- we set aria-invalid=\"true\" in case hasErrorVisible is true"
            },
            {
              "kind": "method",
              "name": "_showFeedbackConditionFor",
              "privacy": "protected",
              "description": "Default feedbackCondition condition, used by Subclassers, that will be used when\n`feedbackCondition()` is not overridden by Application Developer.\nShow the validity feedback when returning true, don't show when false",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  },
                  "description": "could be 'error', 'warning', 'info', 'success' or any other custom\nValidator type"
                },
                {
                  "name": "meta",
                  "type": {
                    "text": "object"
                  },
                  "description": "meta info (interaction states etc)"
                }
              ]
            },
            {
              "kind": "field",
              "name": "_feedbackConditionMeta",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "feedbackCondition",
              "privacy": "public",
              "description": "Allows the end user to specify when a feedback message should be shown",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  },
                  "description": "could be 'error', 'warning', 'info', 'success' or any other custom\nValidator type"
                },
                {
                  "name": "meta",
                  "type": {
                    "text": "object"
                  },
                  "description": "meta info (interaction states etc)",
                  "default": "this._feedbackConditionMeta"
                },
                {
                  "name": "currentCondition",
                  "type": {
                    "text": "((type: string, meta: object) => boolean)"
                  },
                  "description": "this is the _showFeedbackConditionFor\nthat can be used if a developer wants to override for a certain type, but wants to fallback\nfor other types",
                  "default": "this._showFeedbackConditionFor.bind(this)"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_hasFeedbackVisibleFor",
              "privacy": "protected",
              "description": "Used to translate `.hasFeedbackFor` and `.shouldShowFeedbackFor` to `.showsFeedbackFor`",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateShouldShowFeedbackFor",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_prioritizeAndFilterFeedback",
              "privacy": "protected",
              "description": "Orders all active validators in this.__validationResult. Can\nalso filter out occurrences (based on interaction states)",
              "return": {
                "type": {
                  "text": "Validator[]"
                }
              },
              "parameters": [
                {
                  "name": "opts",
                  "type": {
                    "text": "{ validationResult: Validator[] }"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ValidateMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidateMixinImplementation",
          "declaration": {
            "name": "ValidateMixinImplementation",
            "module": "./src/validate/ValidateMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ValidateMixin",
          "declaration": {
            "name": "ValidateMixin",
            "module": "./src/validate/ValidateMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/Validator.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "Validator",
          "members": [
            {
              "name": "MessageData.modelValue",
              "type": {
                "text": "*"
              },
              "description": ""
            },
            {
              "name": "MessageData.fieldName",
              "type": {
                "text": "string"
              },
              "description": ""
            },
            {
              "name": "MessageData.formControl",
              "type": {
                "text": "HTMLElement"
              },
              "description": ""
            },
            {
              "name": "MessageData.type",
              "type": {
                "text": "string"
              },
              "description": ""
            },
            {
              "name": "MessageData.config",
              "type": {
                "text": "Object.<string,?>"
              },
              "description": ""
            },
            {
              "name": "MessageData.name",
              "type": {
                "text": "string"
              },
              "description": ""
            },
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "async",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "getMessage",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "Promise<string | Node>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "MessageData | undefined"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "__param",
              "privacy": "public",
              "type": {
                "text": "unknown"
              }
            },
            {
              "kind": "field",
              "name": "__config",
              "privacy": "public",
              "type": {
                "text": "{\n        [x: string]: unknown;\n    }"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean | Promise<boolean>"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "unknown"
                  },
                  "optional": true
                },
                {
                  "name": "param",
                  "type": {
                    "text": "unknown"
                  },
                  "optional": true
                },
                {
                  "name": "config",
                  "type": {
                    "text": "{} | undefined"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "param",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "config",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_getMessage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<string | Node>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "MessageData | undefined"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFormControlConnect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "formControl",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFormControlDisconnect",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "formControl",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "abortExecution",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "__fakeExtendsEventTarget",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "addEventListener",
              "privacy": "public",
              "type": {
                "text": "((type: string, listener: EventListener, opts?: Object | undefined) => void) | undefined"
              }
            },
            {
              "kind": "field",
              "name": "removeEventListener",
              "privacy": "public",
              "type": {
                "text": "((type: string, listener: EventListener, opts?: Object | undefined) => void) | undefined"
              }
            },
            {
              "kind": "field",
              "name": "dispatchEvent",
              "privacy": "public",
              "type": {
                "text": "((event: Event | CustomEvent) => boolean) | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Validator",
          "declaration": {
            "name": "Validator",
            "module": "./src/validate/Validator.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/Validator.js",
      "declarations": [
        {
          "kind": "class",
          "name": "Validator",
          "members": [
            {
              "name": "MessageData.modelValue",
              "type": {
                "text": "*"
              },
              "description": ""
            },
            {
              "name": "MessageData.fieldName",
              "type": {
                "text": "string"
              },
              "description": ""
            },
            {
              "name": "MessageData.formControl",
              "type": {
                "text": "HTMLElement"
              },
              "description": ""
            },
            {
              "name": "MessageData.type",
              "type": {
                "text": "string"
              },
              "description": ""
            },
            {
              "name": "MessageData.config",
              "type": {
                "text": "Object.<string,?>"
              },
              "description": ""
            },
            {
              "name": "MessageData.name",
              "type": {
                "text": "string"
              },
              "description": ""
            },
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "async",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Boolean|Promise<Boolean>"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "?"
                  },
                  "optional": true
                },
                {
                  "name": "param",
                  "type": {
                    "text": "?"
                  },
                  "optional": true
                },
                {
                  "name": "config",
                  "type": {
                    "text": "{}"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "param",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "config",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_getMessage",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<string|Node>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "MessageData"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMessage",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "Promise<string|Node>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "MessageData"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFormControlConnect",
              "privacy": "public",
              "parameters": [
                {
                  "name": "formControl",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFormControlDisconnect",
              "privacy": "public",
              "parameters": [
                {
                  "name": "formControl",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "abortExecution",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__fakeExtendsEventTarget",
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Validator",
          "declaration": {
            "name": "Validator",
            "module": "./src/validate/Validator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test/choice-group/ChoiceGroupMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/choice-group/ChoiceInputMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/form-group/FormGroupMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/utils/SyncUpdatableMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/utils/getAriaElementsInRightDomOrder.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/DateValidators.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/NumberValidators.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/Required.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/ResultValidator.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/StringValidators.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/ValidateMixin.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/ValidateMixinFeedbackPart.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/Validator.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test/validate/lion-validation-feedback.test.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/choice-group/ChoiceGroupMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runChoiceGroupMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "{ parentTagString?:string, childTagString?: string, choiceType?: string}"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runChoiceGroupMixinSuite",
          "declaration": {
            "name": "runChoiceGroupMixinSuite",
            "module": "./test-suites/choice-group/ChoiceGroupMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/choice-group/ChoiceInputMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runChoiceInputMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "{ tagString?:string, tagType?: string}"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runChoiceInputMixinSuite",
          "declaration": {
            "name": "runChoiceInputMixinSuite",
            "module": "./test-suites/choice-group/ChoiceInputMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/form-group/FormGroupMixin-input.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runFormGroupMixinInputSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "cfg",
              "type": {
                "text": "{\n    tagString?: string | undefined;\n    childTagString?: string | undefined;\n} | undefined"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runFormGroupMixinInputSuite",
          "declaration": {
            "name": "runFormGroupMixinInputSuite",
            "module": "./test-suites/form-group/FormGroupMixin-input.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-suites/form-group/FormGroupMixin.suite.d.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "runFormGroupMixinSuite",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "cfg",
              "type": {
                "text": "{\n    tagString?: string | undefined;\n    childTagString?: string | undefined;\n} | undefined"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "runFormGroupMixinSuite",
          "declaration": {
            "name": "runFormGroupMixinSuite",
            "module": "./test-suites/form-group/FormGroupMixin.suite.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/choice-group/ChoiceGroupMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ChoiceGroupHost",
          "members": [
            {
              "kind": "field",
              "name": "multipleChoice",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "modelValue",
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "serializedValue",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "formattedValue",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "addFormElement",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControlHost"
                  }
                },
                {
                  "name": "indexToInsertAt",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clear",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_oldModelValue",
              "privacy": "protected",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElementsFilter",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "FormControl"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "filterFn",
                  "type": {
                    "text": "(el: FormControl, property?: string) => boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_throwWhenInvalidChildModelValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_checkSingleChoiceElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getCheckedElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_setCheckedElements",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "check",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onBeforeRepropagateChildrenValues",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setChoiceGroupTouched",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__delegateNameAttribute",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "ChoiceGroupImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<ChoiceGroupHost> &\n  Pick<typeof ChoiceGroupHost, keyof typeof ChoiceGroupHost> &\n  Constructor<FormRegistrarHost> &\n  Pick<typeof FormRegistrarHost, keyof typeof FormRegistrarHost> &\n  Constructor<InteractionStateHost> &\n  Pick<typeof InteractionStateHost, keyof typeof InteractionStateHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceGroupHost",
          "declaration": {
            "name": "ChoiceGroupHost",
            "module": "./types/choice-group/ChoiceGroupMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "ChoiceGroupImplementation",
          "declaration": {
            "name": "ChoiceGroupImplementation",
            "module": "./types/choice-group/ChoiceGroupMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/choice-group/ChoiceInputMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ChoiceInputHost",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "serializedValue",
              "privacy": "public",
              "type": {
                "text": "ChoiceInputSerializedValue"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "modelValue",
              "privacy": "public",
              "type": {
                "text": "ChoiceInputModelValue"
              }
            },
            {
              "kind": "field",
              "name": "choiceValue",
              "privacy": "public",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "parser",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "any"
                }
              }
            },
            {
              "kind": "method",
              "name": "formatter",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "modelValue",
                  "type": {
                    "text": "ChoiceInputModelValue"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_isHandlingUserInput",
              "privacy": "protected",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "_proxyInputEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_choiceGraphicTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_afterTemplate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_preventDuplicateLabelClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_syncNameToParentFormGroup",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_toggleChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onModelValueChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "newV",
                  "type": {
                    "text": "{ modelValue: ChoiceInputModelValue }"
                  }
                },
                {
                  "name": "oldV",
                  "type": {
                    "text": "{ modelValue: ChoiceInputModelValue }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_isEmpty",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_syncValueUpwards",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__syncModelCheckedToChecked",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__syncCheckedToModel",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__syncCheckedToInputElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "ChoiceInputImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<ChoiceInputHost> &\n  Pick<typeof ChoiceInputHost, keyof typeof ChoiceInputHost> &\n  Constructor<FormatHost> &\n  Pick<typeof FormatHost, keyof typeof FormatHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceInputHost",
          "declaration": {
            "name": "ChoiceInputHost",
            "module": "./types/choice-group/ChoiceInputMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "ChoiceInputImplementation",
          "declaration": {
            "name": "ChoiceInputImplementation",
            "module": "./types/choice-group/ChoiceInputMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/form-group/FormGroupMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormGroupHost",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "prefilled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "touched",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "dirty",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "submitted",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "serializedValue",
              "privacy": "public",
              "type": {
                "text": "{ [key: string]: any }"
              }
            },
            {
              "kind": "field",
              "name": "formattedValue",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "modelValue",
              "privacy": "public",
              "type": {
                "text": "{ [x: string]: any }"
              }
            },
            {
              "kind": "method",
              "name": "resetInteractionState",
              "privacy": "public",
              "description": "Resets all interaction states for all formElements",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "clearGroup",
              "privacy": "public",
              "description": "Clears all values and resets all interaction states of all FormControls in group,",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "submitGroup",
              "privacy": "public",
              "description": "Handles interaction state 'submitted'.\nThis allows children to enable visibility of validation feedback",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "resetGroup",
              "privacy": "public",
              "description": "Resets to initial/prefilled values and interaction states of all FormControls in group,",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_initialModelValue",
              "privacy": "protected",
              "type": {
                "text": "{ [x: string]: any }"
              }
            },
            {
              "kind": "field",
              "name": "_inputNode",
              "privacy": "protected",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElements",
              "privacy": "protected",
              "description": "Gets a keyed be name object for requested property (like modelValue/serializedValue)",
              "return": {
                "type": {
                  "text": "{ [name: string]: any }"
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "filterFn",
                  "type": {
                    "text": "(el: FormControl, property?: string) => boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getFromAllFormElementsFilter",
              "privacy": "protected",
              "description": "A filter function which will exclude a form field when returning false\nBy default, exclude form fields which are disabled\n\nThe type is be passed as well for more fine grained control, e.g.\ndistinguish the filter when fetching modelValue versus serializedValue",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "FormControl"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setValueMapForAllFormElements",
              "privacy": "protected",
              "description": "Allows to set formElements values via a keyed object structure",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "values",
                  "type": {
                    "text": "{ [x: string]: any }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setValueForAllFormElements",
              "privacy": "protected",
              "description": "Sets the same value for requested property in all formElements",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_anyFormElementHas",
              "privacy": "protected",
              "description": "Returns true when one of the formElements has requested property",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "prop",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_everyFormElementHas",
              "privacy": "protected",
              "description": "Returns true when all of the formElements have requested property",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "prop",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_anyFormElementHasFeedbackFor",
              "privacy": "protected",
              "description": "Returns true when all of the formElements have requested property",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "prop",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_checkForOutsideClick",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_triggerInitialModelValueChangedEvent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_syncDirty",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_onFocusOut",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_syncFocused",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "__descriptionElementsInParentChain",
              "privacy": "private",
              "type": {
                "text": "Set<HTMLElement>"
              }
            },
            {
              "kind": "field",
              "name": "__addedSubValidators",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__isInitialModelValue",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__isInitialSerializedValue",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "__pendingValues",
              "privacy": "private",
              "type": {
                "text": "{\n    modelValue?: { [key: string]: any };\n    serializedValue?: { [key: string]: any };\n  }"
              }
            },
            {
              "kind": "method",
              "name": "__initInteractionStates",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__setupOutsideClickHandling",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__requestChildrenToBeDisabled",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__retractRequestChildrenToBeDisabled",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__linkParentMessages",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__unlinkParentMessages",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__storeAllDescriptionElementsInParentChain",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__onChildValidatePerformed",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "FormGroupImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FormGroupHost> &\n  Pick<typeof FormGroupHost, keyof typeof FormGroupHost> &\n  Constructor<FormRegistrarHost> &\n  Pick<typeof FormRegistrarHost, keyof typeof FormRegistrarHost> &\n  Constructor<FormControlHost> &\n  Pick<typeof FormControlHost, keyof typeof FormControlHost> &\n  Constructor<ValidateHost> &\n  Pick<typeof ValidateHost, keyof typeof ValidateHost> &\n  Constructor<DisabledHost> &\n  Pick<typeof DisabledHost, keyof typeof DisabledHost> &\n  Constructor<SlotHost> &\n  Pick<typeof SlotHost, keyof typeof SlotHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormGroupHost",
          "declaration": {
            "name": "FormGroupHost",
            "module": "./types/form-group/FormGroupMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormGroupImplementation",
          "declaration": {
            "name": "FormGroupImplementation",
            "module": "./types/form-group/FormGroupMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/registration/FormRegisteringMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormRegisteringHost",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "_parentFormGroup",
              "privacy": "protected",
              "type": {
                "text": "FormRegistrarHost | undefined"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "FormRegisteringImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FormRegisteringHost> &\n  Pick<typeof FormRegisteringHost, keyof typeof FormRegisteringHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegisteringHost",
          "declaration": {
            "name": "FormRegisteringHost",
            "module": "./types/registration/FormRegisteringMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormRegisteringImplementation",
          "declaration": {
            "name": "FormRegisteringImplementation",
            "module": "./types/registration/FormRegisteringMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/registration/FormRegistrarMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ElementWithParentFormGroup",
          "members": [
            {
              "kind": "field",
              "name": "_parentFormGroup",
              "privacy": "public",
              "type": {
                "text": "FormRegistrarHost"
              }
            }
          ]
        },
        {
          "kind": "class",
          "name": "FormRegistrarHost",
          "members": [
            {
              "kind": "field",
              "name": "formElements",
              "privacy": "public",
              "type": {
                "text": "FormControlsCollection & { [x: string]: any }"
              }
            },
            {
              "kind": "method",
              "name": "addFormElement",
              "privacy": "public",
              "description": "Adds FormControl to `.formElements`",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "| (FormControlHost & ElementWithParentFormGroup)\n      | (FormControlHost & HTMLElement)\n      | (HTMLElement & ElementWithParentFormGroup)"
                  }
                },
                {
                  "name": "indexToInsertAt",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeFormElement",
              "privacy": "public",
              "description": "Removes FormControl from `.formElements`",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "FormRegisteringHost"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isRegisteredFormElement",
              "privacy": "public",
              "description": "Whether FormControl is part of `.formElements`",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "FormControlHost"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "registrationComplete",
              "privacy": "public",
              "type": {
                "text": "Promise<boolean>"
              }
            },
            {
              "kind": "field",
              "name": "initComplete",
              "privacy": "public",
              "type": {
                "text": "Promise<boolean>"
              }
            },
            {
              "kind": "field",
              "name": "_isFormOrFieldset",
              "privacy": "protected",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "_onRequestToAddFormElement",
              "privacy": "protected",
              "description": "Hook for Subclassers to perform logic before an element is added",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRequestToChangeFormElementName",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onRequestToRemoveFormElement",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_completeRegistration",
              "privacy": "protected",
              "description": "Resolves the registrationComplete promise. Subclassers can delay if needed",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "FormRegistrarImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FormRegistrarHost> &\n  Pick<typeof FormRegistrarHost, keyof typeof FormRegistrarHost> &\n  Constructor<FormRegisteringHost> &\n  Pick<typeof FormRegisteringHost, keyof typeof FormRegisteringHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ElementWithParentFormGroup",
          "declaration": {
            "name": "ElementWithParentFormGroup",
            "module": "./types/registration/FormRegistrarMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarHost",
          "declaration": {
            "name": "FormRegistrarHost",
            "module": "./types/registration/FormRegistrarMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarImplementation",
          "declaration": {
            "name": "FormRegistrarImplementation",
            "module": "./types/registration/FormRegistrarMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/registration/FormRegistrarPortalMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "FormRegistrarPortalHost",
          "members": [
            {
              "kind": "field",
              "name": "registrationTarget",
              "privacy": "public",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "__redispatchEventForFormRegistrarPortalMixin",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "ev",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "FormRegistrarPortalImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<FormRegistrarPortalHost> &\n  Pick<typeof FormRegistrarPortalHost, keyof typeof FormRegistrarPortalHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormRegistrarPortalHost",
          "declaration": {
            "name": "FormRegistrarPortalHost",
            "module": "./types/registration/FormRegistrarPortalMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "FormRegistrarPortalImplementation",
          "declaration": {
            "name": "FormRegistrarPortalImplementation",
            "module": "./types/registration/FormRegistrarPortalMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/utils/SyncUpdatableMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "SyncUpdatableHost",
          "members": [
            {
              "kind": "method",
              "name": "updateSync",
              "privacy": "protected",
              "description": "An abstraction that has the exact same api as `requestUpdate`, but taking\ninto account:\n- [member order independence](https://github.com/webcomponents/gold-standard/wiki/Member-Order-Independence)\n- property effects start when all (light) dom has initialized (on firstUpdated)\n- property effects don't interrupt the first meaningful paint\n- compatible with propertyAccessor.`hasChanged`: no manual checks needed or accidentally\nrun property effects / events when no change happened\neffects when values didn't change\nAll code previously present in requestUpdate can be placed in this method.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__syncUpdatableInitialize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "__SyncUpdatableNamespace",
              "privacy": "private",
              "type": {
                "text": "SyncUpdatableNamespace"
              }
            },
            {
              "kind": "method",
              "name": "__syncUpdatableHasChanged",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "SyncUpdatableImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<SyncUpdatableHost> &\n  Pick<typeof SyncUpdatableHost, keyof typeof SyncUpdatableHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SyncUpdatableHost",
          "declaration": {
            "name": "SyncUpdatableHost",
            "module": "./types/utils/SyncUpdatableMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "SyncUpdatableImplementation",
          "declaration": {
            "name": "SyncUpdatableImplementation",
            "module": "./types/utils/SyncUpdatableMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/validate/ValidateMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ValidateHost",
          "members": [
            {
              "kind": "field",
              "name": "validators",
              "privacy": "public",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "hasFeedbackFor",
              "privacy": "public",
              "type": {
                "text": "ValidationType[]"
              }
            },
            {
              "kind": "field",
              "name": "showsFeedbackFor",
              "privacy": "public",
              "type": {
                "text": "ValidationType[]"
              }
            },
            {
              "kind": "field",
              "name": "shouldShowFeedbackFor",
              "privacy": "private",
              "type": {
                "text": "ValidationType[]"
              }
            },
            {
              "kind": "field",
              "name": "validationStates",
              "privacy": "public",
              "type": {
                "text": "{ [key: string]: { [key: string]: Object } }"
              }
            },
            {
              "kind": "field",
              "name": "isPending",
              "privacy": "public",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "defaultValidators",
              "privacy": "public",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "fieldName",
              "privacy": "public",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "validateComplete",
              "privacy": "public",
              "type": {
                "text": "Promise<void>"
              }
            },
            {
              "kind": "field",
              "name": "feedbackComplete",
              "privacy": "public",
              "type": {
                "text": "Promise<void>"
              }
            },
            {
              "kind": "field",
              "name": "validationTypes",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "string[]"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "description": "Triggered by:\n- modelValue change\n- change in the 'validators' array\n-  change in the config of an individual Validator\n\nThree situations are handled:\n- a1) the FormControl is empty: further execution is halted. When the Required Validator\n(being mutually exclusive to the other Validators) is applied, it will end up in the\nvalidation result (as the only Validator, since further execution was halted).\n- a2) there are synchronous Validators: this is the most common flow. When modelValue hasn't\nchanged since last async results were generated, 'sync results' are merged with the\n'async results'.\n- a3) there are asynchronous Validators: for instance when server side evaluation is needed.\nExecutions are scheduled and awaited and the 'async results' are merged with the\n'sync results'.\n\n- b) there are ResultValidators. After steps a1, a2, or a3 are finished, the holistic\nResultValidators (evaluating the total result of the 'regular' (a1, a2 and a3) validators)\nwill be run...\n\nSituations a2 and a3 are not mutually exclusive and can be triggered within one `validate()`\ncall. Situation b will occur after every call.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "opts",
                  "type": {
                    "text": "{ clearCurrentResult?: boolean }"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "field",
              "name": "_visibleMessagesAmount",
              "privacy": "protected",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "_allValidators",
              "privacy": "protected",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "_feedbackConditionMeta",
              "privacy": "protected",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "_updateFeedbackComponent",
              "privacy": "protected",
              "description": "Responsible for retrieving messages from Validators and\n(delegation of) rendering them.\n\nFor `._feedbackNode` (extension of LionValidationFeedback):\n- retrieve messages from highest prio Validators\n- provide the result to custom feedback node and let the\ncustom node decide on their renderings\n\nIn both cases:\n- we compute the 'show' flag (like 'hasErrorVisible') for all types\n- we set the customValidity message of the highest prio Validator\n- we set aria-invalid=\"true\" in case hasErrorVisible is true",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_showFeedbackConditionFor",
              "privacy": "protected",
              "description": "Default feedbackCondition condition, used by Subclassers, that will be used when\n`feedbackCondition()` is not overridden by Application Developer.\nShow the validity feedback when returning true, don't show when false",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  },
                  "description": "could be 'error', 'warning', 'info', 'success' or any other custom\nValidator type"
                },
                {
                  "name": "meta",
                  "type": {
                    "text": "object"
                  },
                  "description": "meta info (interaction states etc)"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_hasFeedbackVisibleFor",
              "privacy": "protected",
              "description": "Used to translate `.hasFeedbackFor` and `.shouldShowFeedbackFor` to `.showsFeedbackFor`",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateShouldShowFeedbackFor",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_prioritizeAndFilterFeedback",
              "privacy": "protected",
              "description": "Orders all active validators in this.__validationResult. Can also filter out occurrences\n(based on interaction states).",
              "return": {
                "type": {
                  "text": "Validator[]"
                }
              },
              "parameters": [
                {
                  "name": "opts",
                  "type": {
                    "text": "{ validationResult: Validator[] }"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "__syncValidationResult",
              "privacy": "private",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "__asyncValidationResult",
              "privacy": "private",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "__validationResult",
              "privacy": "private",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "__prevValidationResult",
              "privacy": "private",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "__prevShownValidationResult",
              "privacy": "private",
              "type": {
                "text": "Validator[]"
              }
            },
            {
              "kind": "field",
              "name": "__childModelValueChanged",
              "privacy": "private",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "__storePrevResult",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__executeValidators",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__validateCompleteResolve",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__executeSyncValidators",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "syncValidators",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  }
                },
                {
                  "name": "opts",
                  "type": {
                    "text": "{ hasAsync: boolean }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__executeAsyncValidators",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "asyncValidators",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__executeResultValidators",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Validator[]"
                }
              },
              "parameters": [
                {
                  "name": "regularValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__finishValidation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "{ source: 'sync' | 'async'; hasAsync?: boolean }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__clearValidationResults",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__onValidatorUpdated",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event | CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupValidators",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__isEmpty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "v",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__getFeedbackMessages",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<FeedbackMessage[]>"
                }
              },
              "parameters": [
                {
                  "name": "validators",
                  "type": {
                    "text": "Validator[]"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "ValidateImplementation",
          "return": {
            "type": {
              "text": "T &\n  Constructor<ValidateHost> &\n  Pick<typeof ValidateHost, keyof typeof ValidateHost> &\n  Constructor<FormControlHost> &\n  Pick<typeof FormControlHost, keyof typeof FormControlHost> &\n  Constructor<SyncUpdatableHost> &\n  Pick<typeof SyncUpdatableHost, keyof typeof SyncUpdatableHost> &\n  Constructor<DisabledHost> &\n  Pick<typeof DisabledHost, keyof typeof DisabledHost> &\n  Constructor<SlotHost> &\n  Pick<typeof SlotHost, keyof typeof SlotHost> &\n  Constructor<ScopedElementsHost> &\n  Pick<typeof ScopedElementsHost, keyof typeof ScopedElementsHost> &\n  Pick<typeof LitElement, keyof typeof LitElement>"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidateHost",
          "declaration": {
            "name": "ValidateHost",
            "module": "./types/validate/ValidateMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValidateImplementation",
          "declaration": {
            "name": "ValidateImplementation",
            "module": "./types/validate/ValidateMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/resultValidators/DefaultSuccess.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "DefaultSuccess",
          "superclass": {
            "name": "ResultValidator",
            "module": "/src/validate/resultValidators/ResultValidator.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefaultSuccess",
          "declaration": {
            "name": "DefaultSuccess",
            "module": "./src/validate/resultValidators/DefaultSuccess.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/resultValidators/DefaultSuccess.js",
      "declarations": [
        {
          "kind": "class",
          "name": "DefaultSuccess",
          "superclass": {
            "name": "ResultValidator",
            "module": "/src/validate/resultValidators/ResultValidator.js"
          },
          "members": [
            {
              "kind": "method",
              "name": "executeOnResults",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "context.regularValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.prevValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                },
                {
                  "name": "context.prevShownValidationResult",
                  "type": {
                    "text": "Validator[]"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DefaultSuccess",
          "declaration": {
            "name": "DefaultSuccess",
            "module": "./src/validate/resultValidators/DefaultSuccess.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/DateValidators.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "IsDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MinDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MaxDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MinMaxDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "IsDateDisabled",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IsDate",
          "declaration": {
            "name": "IsDate",
            "module": "./src/validate/validators/DateValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MinDate",
          "declaration": {
            "name": "MinDate",
            "module": "./src/validate/validators/DateValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MaxDate",
          "declaration": {
            "name": "MaxDate",
            "module": "./src/validate/validators/DateValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxDate",
          "declaration": {
            "name": "MinMaxDate",
            "module": "./src/validate/validators/DateValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "IsDateDisabled",
          "declaration": {
            "name": "IsDateDisabled",
            "module": "./src/validate/validators/DateValidators.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/DateValidators.js",
      "declarations": [
        {
          "kind": "class",
          "name": "IsDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MinDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "min",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MaxDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "max",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MinMaxDate",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "IsDateDisabled",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "isDisabledFn",
                  "default": "this.param"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IsDate",
          "declaration": {
            "name": "IsDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinDate",
          "declaration": {
            "name": "MinDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MaxDate",
          "declaration": {
            "name": "MaxDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxDate",
          "declaration": {
            "name": "MinMaxDate",
            "module": "./src/validate/validators/DateValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "IsDateDisabled",
          "declaration": {
            "name": "IsDateDisabled",
            "module": "./src/validate/validators/DateValidators.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/NumberValidators.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "IsNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MinNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MaxNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MinMaxNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IsNumber",
          "declaration": {
            "name": "IsNumber",
            "module": "./src/validate/validators/NumberValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MinNumber",
          "declaration": {
            "name": "MinNumber",
            "module": "./src/validate/validators/NumberValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MaxNumber",
          "declaration": {
            "name": "MaxNumber",
            "module": "./src/validate/validators/NumberValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxNumber",
          "declaration": {
            "name": "MinMaxNumber",
            "module": "./src/validate/validators/NumberValidators.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/NumberValidators.js",
      "declarations": [
        {
          "kind": "class",
          "name": "IsNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MinNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "min",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MaxNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "max",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MinMaxNumber",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IsNumber",
          "declaration": {
            "name": "IsNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinNumber",
          "declaration": {
            "name": "MinNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MaxNumber",
          "declaration": {
            "name": "MaxNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxNumber",
          "declaration": {
            "name": "MinMaxNumber",
            "module": "./src/validate/validators/NumberValidators.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/Required.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "Required",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "_compatibleRoles",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "string[]"
              }
            },
            {
              "kind": "field",
              "name": "_compatibleTags",
              "static": true,
              "privacy": "public",
              "type": {
                "text": "string[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "./src/validate/validators/Required.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/Required.js",
      "declarations": [
        {
          "kind": "class",
          "name": "Required",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_compatibleRoles",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_compatibleTags",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onFormControlConnect",
              "privacy": "public",
              "parameters": [
                {
                  "name": "formControl",
                  "type": {
                    "text": "FormControlHost & HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFormControlDisconnect",
              "privacy": "public",
              "parameters": [
                {
                  "name": "formControl",
                  "type": {
                    "text": "FormControlHost & HTMLElement"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "./src/validate/validators/Required.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/StringValidators.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "IsString",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "EqualsLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MinLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MaxLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "MinMaxLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "IsEmail",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        },
        {
          "kind": "class",
          "name": "Pattern",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IsString",
          "declaration": {
            "name": "IsString",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "EqualsLength",
          "declaration": {
            "name": "EqualsLength",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MinLength",
          "declaration": {
            "name": "MinLength",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MaxLength",
          "declaration": {
            "name": "MaxLength",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxLength",
          "declaration": {
            "name": "MinMaxLength",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "IsEmail",
          "declaration": {
            "name": "IsEmail",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pattern",
          "declaration": {
            "name": "Pattern",
            "module": "./src/validate/validators/StringValidators.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/validate/validators/StringValidators.js",
      "declarations": [
        {
          "kind": "class",
          "name": "IsString",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "EqualsLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "length",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MinLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "min",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MaxLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "max",
                  "default": "this.param"
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "MinMaxLength",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "IsEmail",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "name": "Pattern",
          "superclass": {
            "name": "Validator",
            "module": "/src/validate/validate/Validator.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "validatorName",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "execute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "?"
                  }
                },
                {
                  "name": "pattern",
                  "default": "this.param"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IsString",
          "declaration": {
            "name": "IsString",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "EqualsLength",
          "declaration": {
            "name": "EqualsLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinLength",
          "declaration": {
            "name": "MinLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MaxLength",
          "declaration": {
            "name": "MaxLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "MinMaxLength",
          "declaration": {
            "name": "MinMaxLength",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "IsEmail",
          "declaration": {
            "name": "IsEmail",
            "module": "./src/validate/validators/StringValidators.js"
          }
        },
        {
          "kind": "js",
          "name": "Pattern",
          "declaration": {
            "name": "Pattern",
            "module": "./src/validate/validators/StringValidators.js"
          }
        }
      ]
    }
  ]
}
